"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualNetwork:
    r"""
    VirtualNetwork is the Schema for the VirtualNetworks API. Manages a virtual network including any configured subnets. Each subnet can optionally be configured with a security group to be associated with the subnet.

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualNetwork", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta2VirtualNetworkSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta2VirtualNetworkStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta2" = "network.azure.upbound.io/v1beta2"

    kind: "VirtualNetwork" = "VirtualNetwork"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta2VirtualNetworkSpec

    status?: NetworkAzureUpboundIoV1beta2VirtualNetworkStatus


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpec:
    r"""
    VirtualNetworkSpec defines the desired state of VirtualNetwork

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProvider:
    r"""
    network azure upbound io v1beta2 virtual network spec for provider

    Attributes
    ----------
    addressSpace : [str], default is Undefined, optional
        The address space that is used the virtual network. You can supply more than one address space.
    bgpCommunity : str, default is Undefined, optional
        The BGP community attribute in format <as-number>:<community-value>.
    ddosProtectionPlan : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderDdosProtectionPlan, default is Undefined, optional
        ddos protection plan
    dnsServers : [str], default is Undefined, optional
        List of IP addresses of DNS servers
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
    encryption : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderEncryption, default is Undefined, optional
        encryption
    flowTimeoutInMinutes : float, default is Undefined, optional
        The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between 4 and 30 minutes.
    location : str, default is Undefined, optional
        The location/region where the virtual network is created. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
    resourceGroupNameRef : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    addressSpace?: [str]

    bgpCommunity?: str

    ddosProtectionPlan?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderDdosProtectionPlan

    dnsServers?: [str]

    edgeZone?: str

    encryption?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderEncryption

    flowTimeoutInMinutes?: float

    location?: str

    resourceGroupName?: str

    resourceGroupNameRef?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameSelector

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderDdosProtectionPlan:
    r"""
    A ddos_protection_plan block as documented below.

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Enable/disable DDoS Protection Plan on Virtual Network.
    id : str, default is Undefined, optional
        The ID of DDoS Protection Plan.
    """


    enable?: bool

    id?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderEncryption:
    r"""
    A encryption block as defined below.

    Attributes
    ----------
    enforcement : str, default is Undefined, optional
        Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are DropUnencrypted and AllowUnencrypted.
    """


    enforcement?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameRefPolicy


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    addressSpace : [str], default is Undefined, optional
        The address space that is used the virtual network. You can supply more than one address space.
    bgpCommunity : str, default is Undefined, optional
        The BGP community attribute in format <as-number>:<community-value>.
    ddosProtectionPlan : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProviderDdosProtectionPlan, default is Undefined, optional
        ddos protection plan
    dnsServers : [str], default is Undefined, optional
        List of IP addresses of DNS servers
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
    encryption : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProviderEncryption, default is Undefined, optional
        encryption
    flowTimeoutInMinutes : float, default is Undefined, optional
        The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between 4 and 30 minutes.
    location : str, default is Undefined, optional
        The location/region where the virtual network is created. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    addressSpace?: [str]

    bgpCommunity?: str

    ddosProtectionPlan?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProviderDdosProtectionPlan

    dnsServers?: [str]

    edgeZone?: str

    encryption?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProviderEncryption

    flowTimeoutInMinutes?: float

    location?: str

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProviderDdosProtectionPlan:
    r"""
    A ddos_protection_plan block as documented below.

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Enable/disable DDoS Protection Plan on Virtual Network.
    id : str, default is Undefined, optional
        The ID of DDoS Protection Plan.
    """


    enable?: bool

    id?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecInitProviderEncryption:
    r"""
    A encryption block as defined below.

    Attributes
    ----------
    enforcement : str, default is Undefined, optional
        Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are DropUnencrypted and AllowUnencrypted.
    """


    enforcement?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkStatus:
    r"""
    VirtualNetworkStatus defines the observed state of VirtualNetwork.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta2VirtualNetworkStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta2VirtualNetworkStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProvider:
    r"""
    network azure upbound io v1beta2 virtual network status at provider

    Attributes
    ----------
    addressSpace : [str], default is Undefined, optional
        The address space that is used the virtual network. You can supply more than one address space.
    bgpCommunity : str, default is Undefined, optional
        The BGP community attribute in format <as-number>:<community-value>.
    ddosProtectionPlan : NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderDdosProtectionPlan, default is Undefined, optional
        ddos protection plan
    dnsServers : [str], default is Undefined, optional
        List of IP addresses of DNS servers
    edgeZone : str, default is Undefined, optional
        Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
    encryption : NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderEncryption, default is Undefined, optional
        encryption
    flowTimeoutInMinutes : float, default is Undefined, optional
        The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between 4 and 30 minutes.
    guid : str, default is Undefined, optional
        The GUID of the virtual network.
    id : str, default is Undefined, optional
        The virtual NetworkConfiguration ID.
    location : str, default is Undefined, optional
        The location/region where the virtual network is created. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
    subnet : [NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderSubnetItems0], default is Undefined, optional
        Can be specified multiple times to define multiple subnets. Each subnet block supports fields documented below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    addressSpace?: [str]

    bgpCommunity?: str

    ddosProtectionPlan?: NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderDdosProtectionPlan

    dnsServers?: [str]

    edgeZone?: str

    encryption?: NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderEncryption

    flowTimeoutInMinutes?: float

    guid?: str

    id?: str

    location?: str

    resourceGroupName?: str

    subnet?: [NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderSubnetItems0]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderDdosProtectionPlan:
    r"""
    A ddos_protection_plan block as documented below.

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Enable/disable DDoS Protection Plan on Virtual Network.
    id : str, default is Undefined, optional
        The ID of DDoS Protection Plan.
    """


    enable?: bool

    id?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderEncryption:
    r"""
    A encryption block as defined below.

    Attributes
    ----------
    enforcement : str, default is Undefined, optional
        Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are DropUnencrypted and AllowUnencrypted.
    """


    enforcement?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkStatusAtProviderSubnetItems0:
    r"""
    network azure upbound io v1beta2 virtual network status at provider subnet items0

    Attributes
    ----------
    addressPrefix : str, default is Undefined, optional
        The address prefix to use for the subnet.
    id : str, default is Undefined, optional
        The ID of this subnet.
    name : str, default is Undefined, optional
        The name of the subnet.
    securityGroup : str, default is Undefined, optional
        The Network Security Group to associate with the subnet. (Referenced by id, ie. azurerm_network_security_group.example.id)
    """


    addressPrefix?: str

    id?: str

    name?: str

    securityGroup?: str


schema NetworkAzureUpboundIoV1beta2VirtualNetworkStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


