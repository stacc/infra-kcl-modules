"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ExpressRoutePort:
    r"""
    ExpressRoutePort is the Schema for the ExpressRoutePorts API. Manages a Express Route Port.

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ExpressRoutePort", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta2ExpressRoutePortStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta2" = "network.azure.upbound.io/v1beta2"

    kind: "ExpressRoutePort" = "ExpressRoutePort"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpec

    status?: NetworkAzureUpboundIoV1beta2ExpressRoutePortStatus


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpec:
    r"""
    ExpressRoutePortSpec defines the desired state of ExpressRoutePort

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProvider:
    r"""
    network azure upbound io v1beta2 express route port spec for provider

    Attributes
    ----------
    bandwidthInGbps : float, default is Undefined, optional
        Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.
    billingType : str, default is Undefined, optional
        The billing type of the Express Route Port. Possible values are MeteredData and UnlimitedData.
    encapsulation : str, default is Undefined, optional
        The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: Dot1Q, QinQ.
    identity : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderIdentity, default is Undefined, optional
        identity
    link1 : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderLink1, default is Undefined, optional
        link1
    link2 : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderLink2, default is Undefined, optional
        link2
    location : str, default is Undefined, optional
        The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
    peeringLocation : str, default is Undefined, optional
        The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the Resource Group where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
    resourceGroupNameRef : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to the Express Route Port.
    """


    bandwidthInGbps?: float

    billingType?: str

    encapsulation?: str

    identity?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderIdentity

    link1?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderLink1

    link2?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderLink2

    location?: str

    peeringLocation?: str

    resourceGroupName?: str

    resourceGroupNameRef?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameSelector

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is UserAssigned.
    """


    identityIds?: [str]

    $type?: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderLink1:
    r"""
    A list of link blocks as defined below.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether enable administration state on the Express Route Port Link? Defaults to false.
    macsecCakKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
    macsecCipher : str, default is Undefined, optional
        The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.
    macsecCknKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
    macsecSciEnabled : bool, default is Undefined, optional
        Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.
    """


    adminEnabled?: bool

    macsecCakKeyvaultSecretId?: str

    macsecCipher?: str

    macsecCknKeyvaultSecretId?: str

    macsecSciEnabled?: bool


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderLink2:
    r"""
    A list of link blocks as defined below.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether enable administration state on the Express Route Port Link? Defaults to false.
    macsecCakKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
    macsecCipher : str, default is Undefined, optional
        The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.
    macsecCknKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
    macsecSciEnabled : bool, default is Undefined, optional
        Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.
    """


    adminEnabled?: bool

    macsecCakKeyvaultSecretId?: str

    macsecCipher?: str

    macsecCknKeyvaultSecretId?: str

    macsecSciEnabled?: bool


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameRefPolicy


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bandwidthInGbps : float, default is Undefined, optional
        Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.
    billingType : str, default is Undefined, optional
        The billing type of the Express Route Port. Possible values are MeteredData and UnlimitedData.
    encapsulation : str, default is Undefined, optional
        The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: Dot1Q, QinQ.
    identity : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderIdentity, default is Undefined, optional
        identity
    link1 : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderLink1, default is Undefined, optional
        link1
    link2 : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderLink2, default is Undefined, optional
        link2
    location : str, default is Undefined, optional
        The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
    peeringLocation : str, default is Undefined, optional
        The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to the Express Route Port.
    """


    bandwidthInGbps?: float

    billingType?: str

    encapsulation?: str

    identity?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderIdentity

    link1?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderLink1

    link2?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderLink2

    location?: str

    peeringLocation?: str

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is UserAssigned.
    """


    identityIds?: [str]

    $type?: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderLink1:
    r"""
    A list of link blocks as defined below.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether enable administration state on the Express Route Port Link? Defaults to false.
    macsecCakKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
    macsecCipher : str, default is Undefined, optional
        The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.
    macsecCknKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
    macsecSciEnabled : bool, default is Undefined, optional
        Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.
    """


    adminEnabled?: bool

    macsecCakKeyvaultSecretId?: str

    macsecCipher?: str

    macsecCknKeyvaultSecretId?: str

    macsecSciEnabled?: bool


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecInitProviderLink2:
    r"""
    A list of link blocks as defined below.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether enable administration state on the Express Route Port Link? Defaults to false.
    macsecCakKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
    macsecCipher : str, default is Undefined, optional
        The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.
    macsecCknKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
    macsecSciEnabled : bool, default is Undefined, optional
        Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.
    """


    adminEnabled?: bool

    macsecCakKeyvaultSecretId?: str

    macsecCipher?: str

    macsecCknKeyvaultSecretId?: str

    macsecSciEnabled?: bool


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortStatus:
    r"""
    ExpressRoutePortStatus defines the observed state of ExpressRoutePort.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProvider:
    r"""
    network azure upbound io v1beta2 express route port status at provider

    Attributes
    ----------
    bandwidthInGbps : float, default is Undefined, optional
        Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.
    billingType : str, default is Undefined, optional
        The billing type of the Express Route Port. Possible values are MeteredData and UnlimitedData.
    encapsulation : str, default is Undefined, optional
        The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: Dot1Q, QinQ.
    ethertype : str, default is Undefined, optional
        The EtherType of the Express Route Port.
    guid : str, default is Undefined, optional
        The resource GUID of the Express Route Port.
    id : str, default is Undefined, optional
        The ID of the Express Route Port.
    identity : NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderIdentity, default is Undefined, optional
        identity
    link1 : NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderLink1, default is Undefined, optional
        link1
    link2 : NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderLink2, default is Undefined, optional
        link2
    location : str, default is Undefined, optional
        The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
    mtu : str, default is Undefined, optional
        The maximum transmission unit of the Express Route Port.
    peeringLocation : str, default is Undefined, optional
        The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the Resource Group where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to the Express Route Port.
    """


    bandwidthInGbps?: float

    billingType?: str

    encapsulation?: str

    ethertype?: str

    guid?: str

    id?: str

    identity?: NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderIdentity

    link1?: NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderLink1

    link2?: NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderLink2

    location?: str

    mtu?: str

    peeringLocation?: str

    resourceGroupName?: str

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderIdentity:
    r"""
    An identity block as defined below.

    Attributes
    ----------
    identityIds : [str], default is Undefined, optional
        Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
    principalId : str, default is Undefined, optional
        The ID of the Express Route Port.
    tenantId : str, default is Undefined, optional
        The ID of the Express Route Port.
    $type : str, default is Undefined, optional
        Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is UserAssigned.
    """


    identityIds?: [str]

    principalId?: str

    tenantId?: str

    $type?: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderLink1:
    r"""
    A list of link blocks as defined below.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether enable administration state on the Express Route Port Link? Defaults to false.
    connectorType : str, default is Undefined, optional
        The connector type of the Express Route Port Link.
    id : str, default is Undefined, optional
        The ID of this Express Route Port Link.
    interfaceName : str, default is Undefined, optional
        The interface name of the Azure router associated with the Express Route Port Link.
    macsecCakKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
    macsecCipher : str, default is Undefined, optional
        The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.
    macsecCknKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
    macsecSciEnabled : bool, default is Undefined, optional
        Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.
    patchPanelId : str, default is Undefined, optional
        The ID that maps from the Express Route Port Link to the patch panel port.
    rackId : str, default is Undefined, optional
        The ID that maps from the patch panel port to the rack.
    routerName : str, default is Undefined, optional
        The name of the Azure router associated with the Express Route Port Link.
    """


    adminEnabled?: bool

    connectorType?: str

    id?: str

    interfaceName?: str

    macsecCakKeyvaultSecretId?: str

    macsecCipher?: str

    macsecCknKeyvaultSecretId?: str

    macsecSciEnabled?: bool

    patchPanelId?: str

    rackId?: str

    routerName?: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusAtProviderLink2:
    r"""
    A list of link blocks as defined below.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether enable administration state on the Express Route Port Link? Defaults to false.
    connectorType : str, default is Undefined, optional
        The connector type of the Express Route Port Link.
    id : str, default is Undefined, optional
        The ID of this Express Route Port Link.
    interfaceName : str, default is Undefined, optional
        The interface name of the Azure router associated with the Express Route Port Link.
    macsecCakKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
    macsecCipher : str, default is Undefined, optional
        The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.
    macsecCknKeyvaultSecretId : str, default is Undefined, optional
        The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
    macsecSciEnabled : bool, default is Undefined, optional
        Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.
    patchPanelId : str, default is Undefined, optional
        The ID that maps from the Express Route Port Link to the patch panel port.
    rackId : str, default is Undefined, optional
        The ID that maps from the patch panel port to the rack.
    routerName : str, default is Undefined, optional
        The name of the Azure router associated with the Express Route Port Link.
    """


    adminEnabled?: bool

    connectorType?: str

    id?: str

    interfaceName?: str

    macsecCakKeyvaultSecretId?: str

    macsecCipher?: str

    macsecCknKeyvaultSecretId?: str

    macsecSciEnabled?: bool

    patchPanelId?: str

    rackId?: str

    routerName?: str


schema NetworkAzureUpboundIoV1beta2ExpressRoutePortStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


