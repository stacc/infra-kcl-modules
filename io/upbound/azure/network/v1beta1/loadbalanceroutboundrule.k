"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LoadBalancerOutboundRule:
    r"""
    LoadBalancerOutboundRule is the Schema for the LoadBalancerOutboundRules API. Manages a Load Balancer Outbound Rule.

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LoadBalancerOutboundRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta1" = "network.azure.upbound.io/v1beta1"

    kind: "LoadBalancerOutboundRule" = "LoadBalancerOutboundRule"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpec

    status?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatus


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpec:
    r"""
    LoadBalancerOutboundRuleSpec defines the desired state of LoadBalancerOutboundRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProvider:
    r"""
    network azure upbound io v1beta1 load balancer outbound rule spec for provider

    Attributes
    ----------
    allocatedOutboundPorts : float, default is Undefined, optional
        The number of outbound ports to be used for NAT. Defaults to 1024.
    backendAddressPoolId : str, default is Undefined, optional
        The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
    backendAddressPoolIdRef : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDRef, default is Undefined, optional
        backend address pool Id ref
    backendAddressPoolIdSelector : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDSelector, default is Undefined, optional
        backend address pool Id selector
    enableTcpReset : bool, default is Undefined, optional
        Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
    frontendIpConfiguration : [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderFrontendIPConfigurationItems0], default is Undefined, optional
        One or more frontend_ip_configuration blocks as defined below.
    idleTimeoutInMinutes : float, default is Undefined, optional
        The timeout for the TCP idle connection Defaults to 4.
    loadbalancerId : str, default is Undefined, optional
        The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
    loadbalancerIdRef : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDRef, default is Undefined, optional
        loadbalancer Id ref
    loadbalancerIdSelector : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDSelector, default is Undefined, optional
        loadbalancer Id selector
    $protocol : str, default is Undefined, optional
        The transport protocol for the external endpoint. Possible values are Udp, Tcp or All.
    """


    allocatedOutboundPorts?: float

    backendAddressPoolId?: str

    backendAddressPoolIdRef?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDRef

    backendAddressPoolIdSelector?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDSelector

    enableTcpReset?: bool

    frontendIpConfiguration?: [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderFrontendIPConfigurationItems0]

    idleTimeoutInMinutes?: float

    loadbalancerId?: str

    loadbalancerIdRef?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDRef

    loadbalancerIdSelector?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDSelector

    $protocol?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDRef:
    r"""
    Reference to a LoadBalancerBackendAddressPool in network to populate backendAddressPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDRefPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDSelector:
    r"""
    Selector for a LoadBalancerBackendAddressPool in network to populate backendAddressPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderBackendAddressPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderFrontendIPConfigurationItems0:
    r"""
    network azure upbound io v1beta1 load balancer outbound rule spec for provider frontend IP configuration items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Frontend IP Configuration.
    """


    name?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDRef:
    r"""
    Reference to a LoadBalancer in network to populate loadbalancerId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDRefPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDSelector:
    r"""
    Selector for a LoadBalancer in network to populate loadbalancerId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecForProviderLoadbalancerIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allocatedOutboundPorts : float, default is Undefined, optional
        The number of outbound ports to be used for NAT. Defaults to 1024.
    backendAddressPoolId : str, default is Undefined, optional
        The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
    backendAddressPoolIdRef : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDRef, default is Undefined, optional
        backend address pool Id ref
    backendAddressPoolIdSelector : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDSelector, default is Undefined, optional
        backend address pool Id selector
    enableTcpReset : bool, default is Undefined, optional
        Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
    frontendIpConfiguration : [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderFrontendIPConfigurationItems0], default is Undefined, optional
        One or more frontend_ip_configuration blocks as defined below.
    idleTimeoutInMinutes : float, default is Undefined, optional
        The timeout for the TCP idle connection Defaults to 4.
    $protocol : str, default is Undefined, optional
        The transport protocol for the external endpoint. Possible values are Udp, Tcp or All.
    """


    allocatedOutboundPorts?: float

    backendAddressPoolId?: str

    backendAddressPoolIdRef?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDRef

    backendAddressPoolIdSelector?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDSelector

    enableTcpReset?: bool

    frontendIpConfiguration?: [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderFrontendIPConfigurationItems0]

    idleTimeoutInMinutes?: float

    $protocol?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDRef:
    r"""
    Reference to a LoadBalancerBackendAddressPool in network to populate backendAddressPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDRefPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDSelector:
    r"""
    Selector for a LoadBalancerBackendAddressPool in network to populate backendAddressPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderBackendAddressPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecInitProviderFrontendIPConfigurationItems0:
    r"""
    network azure upbound io v1beta1 load balancer outbound rule spec init provider frontend IP configuration items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Frontend IP Configuration.
    """


    name?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatus:
    r"""
    LoadBalancerOutboundRuleStatus defines the observed state of LoadBalancerOutboundRule.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusAtProvider:
    r"""
    network azure upbound io v1beta1 load balancer outbound rule status at provider

    Attributes
    ----------
    allocatedOutboundPorts : float, default is Undefined, optional
        The number of outbound ports to be used for NAT. Defaults to 1024.
    backendAddressPoolId : str, default is Undefined, optional
        The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
    enableTcpReset : bool, default is Undefined, optional
        Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
    frontendIpConfiguration : [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusAtProviderFrontendIPConfigurationItems0], default is Undefined, optional
        One or more frontend_ip_configuration blocks as defined below.
    id : str, default is Undefined, optional
        The ID of the Load Balancer Outbound Rule.
    idleTimeoutInMinutes : float, default is Undefined, optional
        The timeout for the TCP idle connection Defaults to 4.
    loadbalancerId : str, default is Undefined, optional
        The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
    $protocol : str, default is Undefined, optional
        The transport protocol for the external endpoint. Possible values are Udp, Tcp or All.
    """


    allocatedOutboundPorts?: float

    backendAddressPoolId?: str

    enableTcpReset?: bool

    frontendIpConfiguration?: [NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusAtProviderFrontendIPConfigurationItems0]

    id?: str

    idleTimeoutInMinutes?: float

    loadbalancerId?: str

    $protocol?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusAtProviderFrontendIPConfigurationItems0:
    r"""
    network azure upbound io v1beta1 load balancer outbound rule status at provider frontend IP configuration items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ID of the Load Balancer Outbound Rule.
    name : str, default is Undefined, optional
        The name of the Frontend IP Configuration.
    """


    id?: str

    name?: str


schema NetworkAzureUpboundIoV1beta1LoadBalancerOutboundRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


