"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouteTable:
    r"""
    RouteTable is the Schema for the RouteTables API. Manages a Route Table

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouteTable", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta1RouteTableSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta1RouteTableStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta1" = "network.azure.upbound.io/v1beta1"

    kind: "RouteTable" = "RouteTable"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta1RouteTableSpec

    status?: NetworkAzureUpboundIoV1beta1RouteTableStatus


schema NetworkAzureUpboundIoV1beta1RouteTableSpec:
    r"""
    RouteTableSpec defines the desired state of RouteTable

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta1RouteTableSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta1RouteTableSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta1RouteTableSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta1RouteTableSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta1RouteTableSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta1RouteTableSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta1RouteTableSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta1RouteTableSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta1RouteTableSpecForProvider:
    r"""
    network azure upbound io v1beta1 route table spec for provider

    Attributes
    ----------
    bgpRoutePropagationEnabled : bool, default is Undefined, optional
        bgp route propagation enabled
    disableBgpRoutePropagation : bool, default is Undefined, optional
        Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the route table. Changing this forces a new resource to be created.
    resourceGroupNameRef : NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    route : [NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderRouteItems0], default is Undefined, optional
        List of route objects representing routes as defined below. Each object accepts the arguments documented below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    bgpRoutePropagationEnabled?: bool

    disableBgpRoutePropagation?: bool

    location?: str

    resourceGroupName?: str

    resourceGroupNameRef?: NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameSelector

    route?: [NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderRouteItems0]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteTableSpecForProviderRouteItems0:
    r"""
    network azure upbound io v1beta1 route table spec for provider route items0

    Attributes
    ----------
    addressPrefix : str, default is Undefined, optional
        The destination to which the route applies. Can be CIDR (such as 10.1.0.0/16) or Azure Service Tag (such as ApiManagement, AzureBackup or AzureMonitor) format.
    name : str, default is Undefined, optional
        The name of the route.
    nextHopInIpAddress : str, default is Undefined, optional
        Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
    nextHopType : str, default is Undefined, optional
        The type of Azure hop the packet should be sent to. Possible values are VirtualNetworkGateway, VnetLocal, Internet, VirtualAppliance and None.
    """


    addressPrefix?: str

    name?: str

    nextHopInIpAddress?: str

    nextHopType?: str


schema NetworkAzureUpboundIoV1beta1RouteTableSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bgpRoutePropagationEnabled : bool, default is Undefined, optional
        bgp route propagation enabled
    disableBgpRoutePropagation : bool, default is Undefined, optional
        Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    route : [NetworkAzureUpboundIoV1beta1RouteTableSpecInitProviderRouteItems0], default is Undefined, optional
        List of route objects representing routes as defined below. Each object accepts the arguments documented below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    bgpRoutePropagationEnabled?: bool

    disableBgpRoutePropagation?: bool

    location?: str

    route?: [NetworkAzureUpboundIoV1beta1RouteTableSpecInitProviderRouteItems0]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1RouteTableSpecInitProviderRouteItems0:
    r"""
    network azure upbound io v1beta1 route table spec init provider route items0

    Attributes
    ----------
    addressPrefix : str, default is Undefined, optional
        The destination to which the route applies. Can be CIDR (such as 10.1.0.0/16) or Azure Service Tag (such as ApiManagement, AzureBackup or AzureMonitor) format.
    name : str, default is Undefined, optional
        The name of the route.
    nextHopInIpAddress : str, default is Undefined, optional
        Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
    nextHopType : str, default is Undefined, optional
        The type of Azure hop the packet should be sent to. Possible values are VirtualNetworkGateway, VnetLocal, Internet, VirtualAppliance and None.
    """


    addressPrefix?: str

    name?: str

    nextHopInIpAddress?: str

    nextHopType?: str


schema NetworkAzureUpboundIoV1beta1RouteTableSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteTableSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteTableSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteTableSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteTableSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta1RouteTableSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta1RouteTableStatus:
    r"""
    RouteTableStatus defines the observed state of RouteTable.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta1RouteTableStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta1RouteTableStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta1RouteTableStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta1RouteTableStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta1RouteTableStatusAtProvider:
    r"""
    network azure upbound io v1beta1 route table status at provider

    Attributes
    ----------
    bgpRoutePropagationEnabled : bool, default is Undefined, optional
        bgp route propagation enabled
    disableBgpRoutePropagation : bool, default is Undefined, optional
        Boolean flag which controls propagation of routes learned by BGP on that route table. True means disable.
    id : str, default is Undefined, optional
        The Route Table ID.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the route table. Changing this forces a new resource to be created.
    route : [NetworkAzureUpboundIoV1beta1RouteTableStatusAtProviderRouteItems0], default is Undefined, optional
        List of route objects representing routes as defined below. Each object accepts the arguments documented below.
    subnets : [str], default is Undefined, optional
        The collection of Subnets associated with this route table.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    bgpRoutePropagationEnabled?: bool

    disableBgpRoutePropagation?: bool

    id?: str

    location?: str

    resourceGroupName?: str

    route?: [NetworkAzureUpboundIoV1beta1RouteTableStatusAtProviderRouteItems0]

    subnets?: [str]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1RouteTableStatusAtProviderRouteItems0:
    r"""
    network azure upbound io v1beta1 route table status at provider route items0

    Attributes
    ----------
    addressPrefix : str, default is Undefined, optional
        The destination to which the route applies. Can be CIDR (such as 10.1.0.0/16) or Azure Service Tag (such as ApiManagement, AzureBackup or AzureMonitor) format.
    name : str, default is Undefined, optional
        The name of the route.
    nextHopInIpAddress : str, default is Undefined, optional
        Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
    nextHopType : str, default is Undefined, optional
        The type of Azure hop the packet should be sent to. Possible values are VirtualNetworkGateway, VnetLocal, Internet, VirtualAppliance and None.
    """


    addressPrefix?: str

    name?: str

    nextHopInIpAddress?: str

    nextHopType?: str


schema NetworkAzureUpboundIoV1beta1RouteTableStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


