"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecurityGroup:
    r"""
    SecurityGroup is the Schema for the SecurityGroups API. Manages a network security group that contains a list of network security rules. Network security groups enable inbound or outbound traffic to be enabled or denied.

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecurityGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta1SecurityGroupSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta1SecurityGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta1" = "network.azure.upbound.io/v1beta1"

    kind: "SecurityGroup" = "SecurityGroup"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta1SecurityGroupSpec

    status?: NetworkAzureUpboundIoV1beta1SecurityGroupStatus


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpec:
    r"""
    SecurityGroupSpec defines the desired state of SecurityGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta1SecurityGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta1SecurityGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta1SecurityGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProvider:
    r"""
    network azure upbound io v1beta1 security group spec for provider

    Attributes
    ----------
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
    resourceGroupNameRef : NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    securityRule : [NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderSecurityRuleItems0], default is Undefined, optional
        List of security_rule objects representing security rules, as defined below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    location?: str

    resourceGroupName?: str

    resourceGroupNameRef?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameSelector

    securityRule?: [NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderSecurityRuleItems0]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameRefPolicy


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecForProviderSecurityRuleItems0:
    r"""
    network azure upbound io v1beta1 security group spec for provider security rule items0

    Attributes
    ----------
    access : str, default is Undefined, optional
        Specifies whether network traffic is allowed or denied. Possible values are Allow and Deny.
    description : str, default is Undefined, optional
        A description for this rule. Restricted to 140 characters.
    destinationAddressPrefix : str, default is Undefined, optional
        CIDR or destination IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if destination_address_prefixes is not specified.
    destinationAddressPrefixes : [str], default is Undefined, optional
        List of destination address prefixes. Tags may not be used. This is required if destination_address_prefix is not specified.
    destinationApplicationSecurityGroupIds : [str], default is Undefined, optional
        A List of destination Application Security Group IDs
    destinationPortRange : str, default is Undefined, optional
        Destination Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if destination_port_ranges is not specified.
    destinationPortRanges : [str], default is Undefined, optional
        List of destination ports or port ranges. This is required if destination_port_range is not specified.
    direction : str, default is Undefined, optional
        The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are Inbound and Outbound.
    name : str, default is Undefined, optional
        The name of the security rule.
    priority : float, default is Undefined, optional
        Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
    $protocol : str, default is Undefined, optional
        Network protocol this rule applies to. Possible values include Tcp, Udp, Icmp, Esp, Ah or * (which matches all).
    sourceAddressPrefix : str, default is Undefined, optional
        CIDR or source IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if source_address_prefixes is not specified.
    sourceAddressPrefixes : [str], default is Undefined, optional
        List of source address prefixes. Tags may not be used. This is required if source_address_prefix is not specified.
    sourceApplicationSecurityGroupIds : [str], default is Undefined, optional
        A List of source Application Security Group IDs
    sourcePortRange : str, default is Undefined, optional
        Source Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if source_port_ranges is not specified.
    sourcePortRanges : [str], default is Undefined, optional
        List of source ports or port ranges. This is required if source_port_range is not specified.
    """


    access?: str

    description?: str

    destinationAddressPrefix?: str

    destinationAddressPrefixes?: [str]

    destinationApplicationSecurityGroupIds?: [str]

    destinationPortRange?: str

    destinationPortRanges?: [str]

    direction?: str

    name?: str

    priority?: float

    $protocol?: str

    sourceAddressPrefix?: str

    sourceAddressPrefixes?: [str]

    sourceApplicationSecurityGroupIds?: [str]

    sourcePortRange?: str

    sourcePortRanges?: [str]


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    securityRule : [NetworkAzureUpboundIoV1beta1SecurityGroupSpecInitProviderSecurityRuleItems0], default is Undefined, optional
        List of security_rule objects representing security rules, as defined below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    location?: str

    securityRule?: [NetworkAzureUpboundIoV1beta1SecurityGroupSpecInitProviderSecurityRuleItems0]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecInitProviderSecurityRuleItems0:
    r"""
    network azure upbound io v1beta1 security group spec init provider security rule items0

    Attributes
    ----------
    access : str, default is Undefined, optional
        Specifies whether network traffic is allowed or denied. Possible values are Allow and Deny.
    description : str, default is Undefined, optional
        A description for this rule. Restricted to 140 characters.
    destinationAddressPrefix : str, default is Undefined, optional
        CIDR or destination IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if destination_address_prefixes is not specified.
    destinationAddressPrefixes : [str], default is Undefined, optional
        List of destination address prefixes. Tags may not be used. This is required if destination_address_prefix is not specified.
    destinationApplicationSecurityGroupIds : [str], default is Undefined, optional
        A List of destination Application Security Group IDs
    destinationPortRange : str, default is Undefined, optional
        Destination Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if destination_port_ranges is not specified.
    destinationPortRanges : [str], default is Undefined, optional
        List of destination ports or port ranges. This is required if destination_port_range is not specified.
    direction : str, default is Undefined, optional
        The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are Inbound and Outbound.
    name : str, default is Undefined, optional
        The name of the security rule.
    priority : float, default is Undefined, optional
        Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
    $protocol : str, default is Undefined, optional
        Network protocol this rule applies to. Possible values include Tcp, Udp, Icmp, Esp, Ah or * (which matches all).
    sourceAddressPrefix : str, default is Undefined, optional
        CIDR or source IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if source_address_prefixes is not specified.
    sourceAddressPrefixes : [str], default is Undefined, optional
        List of source address prefixes. Tags may not be used. This is required if source_address_prefix is not specified.
    sourceApplicationSecurityGroupIds : [str], default is Undefined, optional
        A List of source Application Security Group IDs
    sourcePortRange : str, default is Undefined, optional
        Source Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if source_port_ranges is not specified.
    sourcePortRanges : [str], default is Undefined, optional
        List of source ports or port ranges. This is required if source_port_range is not specified.
    """


    access?: str

    description?: str

    destinationAddressPrefix?: str

    destinationAddressPrefixes?: [str]

    destinationApplicationSecurityGroupIds?: [str]

    destinationPortRange?: str

    destinationPortRanges?: [str]

    direction?: str

    name?: str

    priority?: float

    $protocol?: str

    sourceAddressPrefix?: str

    sourceAddressPrefixes?: [str]

    sourceApplicationSecurityGroupIds?: [str]

    sourcePortRange?: str

    sourcePortRanges?: [str]


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1SecurityGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta1SecurityGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta1SecurityGroupStatus:
    r"""
    SecurityGroupStatus defines the observed state of SecurityGroup.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta1SecurityGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta1SecurityGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta1SecurityGroupStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta1SecurityGroupStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta1SecurityGroupStatusAtProvider:
    r"""
    network azure upbound io v1beta1 security group status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ID of the Network Security Group.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
    securityRule : [NetworkAzureUpboundIoV1beta1SecurityGroupStatusAtProviderSecurityRuleItems0], default is Undefined, optional
        List of security_rule objects representing security rules, as defined below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    id?: str

    location?: str

    resourceGroupName?: str

    securityRule?: [NetworkAzureUpboundIoV1beta1SecurityGroupStatusAtProviderSecurityRuleItems0]

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1SecurityGroupStatusAtProviderSecurityRuleItems0:
    r"""
    network azure upbound io v1beta1 security group status at provider security rule items0

    Attributes
    ----------
    access : str, default is Undefined, optional
        Specifies whether network traffic is allowed or denied. Possible values are Allow and Deny.
    description : str, default is Undefined, optional
        A description for this rule. Restricted to 140 characters.
    destinationAddressPrefix : str, default is Undefined, optional
        CIDR or destination IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if destination_address_prefixes is not specified.
    destinationAddressPrefixes : [str], default is Undefined, optional
        List of destination address prefixes. Tags may not be used. This is required if destination_address_prefix is not specified.
    destinationApplicationSecurityGroupIds : [str], default is Undefined, optional
        A List of destination Application Security Group IDs
    destinationPortRange : str, default is Undefined, optional
        Destination Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if destination_port_ranges is not specified.
    destinationPortRanges : [str], default is Undefined, optional
        List of destination ports or port ranges. This is required if destination_port_range is not specified.
    direction : str, default is Undefined, optional
        The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are Inbound and Outbound.
    name : str, default is Undefined, optional
        The name of the security rule.
    priority : float, default is Undefined, optional
        Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
    $protocol : str, default is Undefined, optional
        Network protocol this rule applies to. Possible values include Tcp, Udp, Icmp, Esp, Ah or * (which matches all).
    sourceAddressPrefix : str, default is Undefined, optional
        CIDR or source IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if source_address_prefixes is not specified.
    sourceAddressPrefixes : [str], default is Undefined, optional
        List of source address prefixes. Tags may not be used. This is required if source_address_prefix is not specified.
    sourceApplicationSecurityGroupIds : [str], default is Undefined, optional
        A List of source Application Security Group IDs
    sourcePortRange : str, default is Undefined, optional
        Source Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if source_port_ranges is not specified.
    sourcePortRanges : [str], default is Undefined, optional
        List of source ports or port ranges. This is required if source_port_range is not specified.
    """


    access?: str

    description?: str

    destinationAddressPrefix?: str

    destinationAddressPrefixes?: [str]

    destinationApplicationSecurityGroupIds?: [str]

    destinationPortRange?: str

    destinationPortRanges?: [str]

    direction?: str

    name?: str

    priority?: float

    $protocol?: str

    sourceAddressPrefix?: str

    sourceAddressPrefixes?: [str]

    sourceApplicationSecurityGroupIds?: [str]

    sourcePortRange?: str

    sourcePortRanges?: [str]


schema NetworkAzureUpboundIoV1beta1SecurityGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


