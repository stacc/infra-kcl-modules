"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouteServer:
    r"""
    RouteServer is the Schema for the RouteServers API. Manages an Azure Route Server

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouteServer", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta1RouteServerSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta1RouteServerStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta1" = "network.azure.upbound.io/v1beta1"

    kind: "RouteServer" = "RouteServer"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta1RouteServerSpec

    status?: NetworkAzureUpboundIoV1beta1RouteServerStatus


schema NetworkAzureUpboundIoV1beta1RouteServerSpec:
    r"""
    RouteServerSpec defines the desired state of RouteServer

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta1RouteServerSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta1RouteServerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta1RouteServerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta1RouteServerSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProvider:
    r"""
    network azure upbound io v1beta1 route server spec for provider

    Attributes
    ----------
    branchToBranchTrafficEnabled : bool, default is Undefined, optional
        Whether to enable route exchange between Azure Route Server and the gateway(s)
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the Route Server should exist. Changing this forces a new resource to be created.
    publicIpAddressId : str, default is Undefined, optional
        The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
    publicIpAddressIdRef : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDRef, default is Undefined, optional
        public Ip address Id ref
    publicIpAddressIdSelector : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDSelector, default is Undefined, optional
        public Ip address Id selector
    resourceGroupName : str, default is Undefined, optional
        Specifies the name of the Resource Group where the Route Server should exist. Changing this forces a new resource to be created.
    resourceGroupNameRef : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    sku : str, default is Undefined, optional
        The SKU of the Route Server. The only possible value is Standard. Changing this forces a new resource to be created.
    subnetId : str, default is Undefined, optional
        The ID of the Subnet that the Route Server will reside. Changing this forces a new resource to be created.
    subnetIdRef : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    branchToBranchTrafficEnabled?: bool

    location?: str

    publicIpAddressId?: str

    publicIpAddressIdRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDRef

    publicIpAddressIdSelector?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDSelector

    resourceGroupName?: str

    resourceGroupNameRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameSelector

    sku?: str

    subnetId?: str

    subnetIdRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDRef

    subnetIdSelector?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDSelector

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDRef:
    r"""
    Reference to a PublicIP in network to populate publicIpAddressId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDSelector:
    r"""
    Selector for a PublicIP in network to populate publicIpAddressId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderPublicIPAddressIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    branchToBranchTrafficEnabled : bool, default is Undefined, optional
        Whether to enable route exchange between Azure Route Server and the gateway(s)
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the Route Server should exist. Changing this forces a new resource to be created.
    publicIpAddressId : str, default is Undefined, optional
        The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
    publicIpAddressIdRef : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDRef, default is Undefined, optional
        public Ip address Id ref
    publicIpAddressIdSelector : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDSelector, default is Undefined, optional
        public Ip address Id selector
    sku : str, default is Undefined, optional
        The SKU of the Route Server. The only possible value is Standard. Changing this forces a new resource to be created.
    subnetId : str, default is Undefined, optional
        The ID of the Subnet that the Route Server will reside. Changing this forces a new resource to be created.
    subnetIdRef : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    branchToBranchTrafficEnabled?: bool

    location?: str

    publicIpAddressId?: str

    publicIpAddressIdRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDRef

    publicIpAddressIdSelector?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDSelector

    sku?: str

    subnetId?: str

    subnetIdRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDRef

    subnetIdSelector?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDSelector

    tags?: {str:str}


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDRef:
    r"""
    Reference to a PublicIP in network to populate publicIpAddressId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDSelector:
    r"""
    Selector for a PublicIP in network to populate publicIpAddressId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderPublicIPAddressIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in network to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in network to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1RouteServerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta1RouteServerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta1RouteServerStatus:
    r"""
    RouteServerStatus defines the observed state of RouteServer.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta1RouteServerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta1RouteServerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta1RouteServerStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta1RouteServerStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta1RouteServerStatusAtProvider:
    r"""
    network azure upbound io v1beta1 route server status at provider

    Attributes
    ----------
    branchToBranchTrafficEnabled : bool, default is Undefined, optional
        Whether to enable route exchange between Azure Route Server and the gateway(s)
    id : str, default is Undefined, optional
        The ID of the Route Server .
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the Route Server should exist. Changing this forces a new resource to be created.
    publicIpAddressId : str, default is Undefined, optional
        The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        Specifies the name of the Resource Group where the Route Server should exist. Changing this forces a new resource to be created.
    routingState : str, default is Undefined, optional
        routing state
    sku : str, default is Undefined, optional
        The SKU of the Route Server. The only possible value is Standard. Changing this forces a new resource to be created.
    subnetId : str, default is Undefined, optional
        The ID of the Subnet that the Route Server will reside. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    virtualRouterAsn : float, default is Undefined, optional
        virtual router asn
    virtualRouterIps : [str], default is Undefined, optional
        virtual router ips
    """


    branchToBranchTrafficEnabled?: bool

    id?: str

    location?: str

    publicIpAddressId?: str

    resourceGroupName?: str

    routingState?: str

    sku?: str

    subnetId?: str

    tags?: {str:str}

    virtualRouterAsn?: float

    virtualRouterIps?: [str]


schema NetworkAzureUpboundIoV1beta1RouteServerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


