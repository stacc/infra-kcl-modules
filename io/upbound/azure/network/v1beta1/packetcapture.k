"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PacketCapture:
    r"""
    PacketCapture is the Schema for the PacketCaptures API. Configures Packet Capturing against a Virtual Machine using a Network Watcher.

    Attributes
    ----------
    apiVersion : str, default is "network.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PacketCapture", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkAzureUpboundIoV1beta1PacketCaptureSpec, default is Undefined, required
        spec
    status : NetworkAzureUpboundIoV1beta1PacketCaptureStatus, default is Undefined, optional
        status
    """


    apiVersion: "network.azure.upbound.io/v1beta1" = "network.azure.upbound.io/v1beta1"

    kind: "PacketCapture" = "PacketCapture"

    metadata?: v1.ObjectMeta

    spec: NetworkAzureUpboundIoV1beta1PacketCaptureSpec

    status?: NetworkAzureUpboundIoV1beta1PacketCaptureStatus


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpec:
    r"""
    PacketCaptureSpec defines the desired state of PacketCapture

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProvider

    initProvider?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecWriteConnectionSecretToRef


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProvider:
    r"""
    network azure upbound io v1beta1 packet capture spec for provider

    Attributes
    ----------
    $filter : [NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderFilterItems0], default is Undefined, optional
        One or more filter blocks as defined below. Changing this forces a new resource to be created.
    maximumBytesPerPacket : float, default is Undefined, optional
        The number of bytes captured per packet. The remaining bytes are truncated. Defaults to 0 (Entire Packet Captured). Changing this forces a new resource to be created.
    maximumBytesPerSession : float, default is Undefined, optional
        Maximum size of the capture in Bytes. Defaults to 1073741824 (1GB). Changing this forces a new resource to be created.
    maximumCaptureDuration : float, default is Undefined, optional
        The maximum duration of the capture session in seconds. Defaults to 18000 (5 hours). Changing this forces a new resource to be created.
    networkWatcherName : str, default is Undefined, optional
        The name of the Network Watcher. Changing this forces a new resource to be created.
    networkWatcherNameRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameRef, default is Undefined, optional
        network watcher name ref
    networkWatcherNameSelector : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameSelector, default is Undefined, optional
        network watcher name selector
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.
    resourceGroupNameRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    storageLocation : [NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0], default is Undefined, optional
        A storage_location block as defined below. Changing this forces a new resource to be created.
    targetResourceId : str, default is Undefined, optional
        The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
    """


    $filter?: [NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderFilterItems0]

    maximumBytesPerPacket?: float

    maximumBytesPerSession?: float

    maximumCaptureDuration?: float

    networkWatcherName?: str

    networkWatcherNameRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameRef

    networkWatcherNameSelector?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameSelector

    resourceGroupName?: str

    resourceGroupNameRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameSelector

    storageLocation?: [NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0]

    targetResourceId?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderFilterItems0:
    r"""
    network azure upbound io v1beta1 packet capture spec for provider filter items0

    Attributes
    ----------
    localIpAddress : str, default is Undefined, optional
        The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    localPort : str, default is Undefined, optional
        The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    $protocol : str, default is Undefined, optional
        The Protocol to be filtered on. Possible values include Any, TCP and UDP. Changing this forces a new resource to be created.
    remoteIpAddress : str, default is Undefined, optional
        The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.
    remotePort : str, default is Undefined, optional
        The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    """


    localIpAddress?: str

    localPort?: str

    $protocol?: str

    remoteIpAddress?: str

    remotePort?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameRef:
    r"""
    Reference to a Watcher in network to populate networkWatcherName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameRefPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameSelector:
    r"""
    Selector for a Watcher in network to populate networkWatcherName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderNetworkWatcherNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameRefPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameSelectorPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0:
    r"""
    network azure upbound io v1beta1 packet capture spec for provider storage location items0

    Attributes
    ----------
    filePath : str, default is Undefined, optional
        A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with /var/captures.
    storageAccountId : str, default is Undefined, optional
        The ID of the storage account to save the packet capture session
    storageAccountIdRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    """


    filePath?: str

    storageAccountId?: str

    storageAccountIdRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDRef

    storageAccountIdSelector?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDSelector


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDRefPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecForProviderStorageLocationItems0StorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    $filter : [NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderFilterItems0], default is Undefined, optional
        One or more filter blocks as defined below. Changing this forces a new resource to be created.
    maximumBytesPerPacket : float, default is Undefined, optional
        The number of bytes captured per packet. The remaining bytes are truncated. Defaults to 0 (Entire Packet Captured). Changing this forces a new resource to be created.
    maximumBytesPerSession : float, default is Undefined, optional
        Maximum size of the capture in Bytes. Defaults to 1073741824 (1GB). Changing this forces a new resource to be created.
    maximumCaptureDuration : float, default is Undefined, optional
        The maximum duration of the capture session in seconds. Defaults to 18000 (5 hours). Changing this forces a new resource to be created.
    storageLocation : [NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0], default is Undefined, optional
        A storage_location block as defined below. Changing this forces a new resource to be created.
    targetResourceId : str, default is Undefined, optional
        The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
    """


    $filter?: [NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderFilterItems0]

    maximumBytesPerPacket?: float

    maximumBytesPerSession?: float

    maximumCaptureDuration?: float

    storageLocation?: [NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0]

    targetResourceId?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderFilterItems0:
    r"""
    network azure upbound io v1beta1 packet capture spec init provider filter items0

    Attributes
    ----------
    localIpAddress : str, default is Undefined, optional
        The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    localPort : str, default is Undefined, optional
        The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    $protocol : str, default is Undefined, optional
        The Protocol to be filtered on. Possible values include Any, TCP and UDP. Changing this forces a new resource to be created.
    remoteIpAddress : str, default is Undefined, optional
        The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.
    remotePort : str, default is Undefined, optional
        The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    """


    localIpAddress?: str

    localPort?: str

    $protocol?: str

    remoteIpAddress?: str

    remotePort?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0:
    r"""
    network azure upbound io v1beta1 packet capture spec init provider storage location items0

    Attributes
    ----------
    filePath : str, default is Undefined, optional
        A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with /var/captures.
    storageAccountId : str, default is Undefined, optional
        The ID of the storage account to save the packet capture session
    storageAccountIdRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    """


    filePath?: str

    storageAccountId?: str

    storageAccountIdRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDRef

    storageAccountIdSelector?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDSelector


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDRefPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDSelectorPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecInitProviderStorageLocationItems0StorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecProviderConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureStatus:
    r"""
    PacketCaptureStatus defines the observed state of PacketCapture.

    Attributes
    ----------
    atProvider : NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkAzureUpboundIoV1beta1PacketCaptureStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProvider

    conditions?: [NetworkAzureUpboundIoV1beta1PacketCaptureStatusConditionsItems0]

    observedGeneration?: int


schema NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProvider:
    r"""
    network azure upbound io v1beta1 packet capture status at provider

    Attributes
    ----------
    $filter : [NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProviderFilterItems0], default is Undefined, optional
        One or more filter blocks as defined below. Changing this forces a new resource to be created.
    id : str, default is Undefined, optional
        The Packet Capture ID.
    maximumBytesPerPacket : float, default is Undefined, optional
        The number of bytes captured per packet. The remaining bytes are truncated. Defaults to 0 (Entire Packet Captured). Changing this forces a new resource to be created.
    maximumBytesPerSession : float, default is Undefined, optional
        Maximum size of the capture in Bytes. Defaults to 1073741824 (1GB). Changing this forces a new resource to be created.
    maximumCaptureDuration : float, default is Undefined, optional
        The maximum duration of the capture session in seconds. Defaults to 18000 (5 hours). Changing this forces a new resource to be created.
    networkWatcherName : str, default is Undefined, optional
        The name of the Network Watcher. Changing this forces a new resource to be created.
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.
    storageLocation : [NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProviderStorageLocationItems0], default is Undefined, optional
        A storage_location block as defined below. Changing this forces a new resource to be created.
    targetResourceId : str, default is Undefined, optional
        The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
    """


    $filter?: [NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProviderFilterItems0]

    id?: str

    maximumBytesPerPacket?: float

    maximumBytesPerSession?: float

    maximumCaptureDuration?: float

    networkWatcherName?: str

    resourceGroupName?: str

    storageLocation?: [NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProviderStorageLocationItems0]

    targetResourceId?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProviderFilterItems0:
    r"""
    network azure upbound io v1beta1 packet capture status at provider filter items0

    Attributes
    ----------
    localIpAddress : str, default is Undefined, optional
        The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    localPort : str, default is Undefined, optional
        The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    $protocol : str, default is Undefined, optional
        The Protocol to be filtered on. Possible values include Any, TCP and UDP. Changing this forces a new resource to be created.
    remoteIpAddress : str, default is Undefined, optional
        The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.
    remotePort : str, default is Undefined, optional
        The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
    """


    localIpAddress?: str

    localPort?: str

    $protocol?: str

    remoteIpAddress?: str

    remotePort?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureStatusAtProviderStorageLocationItems0:
    r"""
    network azure upbound io v1beta1 packet capture status at provider storage location items0

    Attributes
    ----------
    filePath : str, default is Undefined, optional
        A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with /var/captures.
    storageAccountId : str, default is Undefined, optional
        The ID of the storage account to save the packet capture session
    storagePath : str, default is Undefined, optional
        The URI of the storage path to save the packet capture.
    """


    filePath?: str

    storageAccountId?: str

    storagePath?: str


schema NetworkAzureUpboundIoV1beta1PacketCaptureStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


