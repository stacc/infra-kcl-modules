"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RoleAssignment:
    r"""
    RoleAssignment is the Schema for the RoleAssignments API. Assigns a given Principal (User or Group) to a given Role.

    Attributes
    ----------
    apiVersion : str, default is "authorization.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RoleAssignment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpec, default is Undefined, required
        spec
    status : AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "authorization.azure.upbound.io/v1beta1" = "authorization.azure.upbound.io/v1beta1"

    kind: "RoleAssignment" = "RoleAssignment"

    metadata?: v1.ObjectMeta

    spec: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpec

    status?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatus


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpec:
    r"""
    RoleAssignmentSpec defines the desired state of RoleAssignment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProvider

    initProvider?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecProviderConfigRef

    publishConnectionDetailsTo?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecWriteConnectionSecretToRef


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProvider:
    r"""
    authorization azure upbound io v1beta1 role assignment spec for provider

    Attributes
    ----------
    condition : str, default is Undefined, optional
        The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
    conditionVersion : str, default is Undefined, optional
        The version of the condition. Possible values are 1.0 or 2.0. Changing this forces a new resource to be created.
    delegatedManagedIdentityResourceId : str, default is Undefined, optional
        The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
    description : str, default is Undefined, optional
        The description for this Role Assignment. Changing this forces a new resource to be created.
    name : str, default is Undefined, optional
        A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
    principalId : str, default is Undefined, optional
        The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
    principalType : str, default is Undefined, optional
        The type of the principal_id. Possible values are User, Group and ServicePrincipal. Changing this forces a new resource to be created. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.
    roleDefinitionId : str, default is Undefined, optional
        The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with role_definition_name.
    roleDefinitionIdRef : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDRef, default is Undefined, optional
        role definition Id ref
    roleDefinitionIdSelector : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDSelector, default is Undefined, optional
        role definition Id selector
    roleDefinitionName : str, default is Undefined, optional
        The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with role_definition_id.
    scope : str, default is Undefined, optional
        The scope at which the Role Assignment applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM, or /providers/Microsoft.Management/managementGroups/myMG. Changing this forces a new resource to be created.
    skipServicePrincipalAadCheck : bool, default is Undefined, optional
        If the principal_id is a newly provisioned Service Principal set this value to true to skip the Azure Active Directory check which may fail due to replication lag. This argument is only valid if the principal_id is a Service Principal identity. Defaults to false.
    """


    condition?: str

    conditionVersion?: str

    delegatedManagedIdentityResourceId?: str

    description?: str

    name?: str

    principalId?: str

    principalType?: str

    roleDefinitionId?: str

    roleDefinitionIdRef?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDRef

    roleDefinitionIdSelector?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDSelector

    roleDefinitionName?: str

    scope?: str

    skipServicePrincipalAadCheck?: bool


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDRef:
    r"""
    Reference to a RoleDefinition in authorization to populate roleDefinitionId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDRefPolicy


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDSelector:
    r"""
    Selector for a RoleDefinition in authorization to populate roleDefinitionId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDSelectorPolicy


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecForProviderRoleDefinitionIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    condition : str, default is Undefined, optional
        The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
    conditionVersion : str, default is Undefined, optional
        The version of the condition. Possible values are 1.0 or 2.0. Changing this forces a new resource to be created.
    delegatedManagedIdentityResourceId : str, default is Undefined, optional
        The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
    description : str, default is Undefined, optional
        The description for this Role Assignment. Changing this forces a new resource to be created.
    name : str, default is Undefined, optional
        A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
    principalId : str, default is Undefined, optional
        The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
    principalType : str, default is Undefined, optional
        The type of the principal_id. Possible values are User, Group and ServicePrincipal. Changing this forces a new resource to be created. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.
    roleDefinitionId : str, default is Undefined, optional
        The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with role_definition_name.
    roleDefinitionIdRef : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDRef, default is Undefined, optional
        role definition Id ref
    roleDefinitionIdSelector : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDSelector, default is Undefined, optional
        role definition Id selector
    roleDefinitionName : str, default is Undefined, optional
        The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with role_definition_id.
    scope : str, default is Undefined, optional
        The scope at which the Role Assignment applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM, or /providers/Microsoft.Management/managementGroups/myMG. Changing this forces a new resource to be created.
    skipServicePrincipalAadCheck : bool, default is Undefined, optional
        If the principal_id is a newly provisioned Service Principal set this value to true to skip the Azure Active Directory check which may fail due to replication lag. This argument is only valid if the principal_id is a Service Principal identity. Defaults to false.
    """


    condition?: str

    conditionVersion?: str

    delegatedManagedIdentityResourceId?: str

    description?: str

    name?: str

    principalId?: str

    principalType?: str

    roleDefinitionId?: str

    roleDefinitionIdRef?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDRef

    roleDefinitionIdSelector?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDSelector

    roleDefinitionName?: str

    scope?: str

    skipServicePrincipalAadCheck?: bool


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDRef:
    r"""
    Reference to a RoleDefinition in authorization to populate roleDefinitionId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDRefPolicy


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDSelector:
    r"""
    Selector for a RoleDefinition in authorization to populate roleDefinitionId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDSelectorPolicy


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecInitProviderRoleDefinitionIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecProviderConfigRefPolicy


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToConfigRef

    metadata?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToMetadata

    name: str


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToConfigRefPolicy


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatus:
    r"""
    RoleAssignmentStatus defines the observed state of RoleAssignment.

    Attributes
    ----------
    atProvider : AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatusAtProvider

    conditions?: [AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatusConditionsItems0]

    observedGeneration?: int


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatusAtProvider:
    r"""
    authorization azure upbound io v1beta1 role assignment status at provider

    Attributes
    ----------
    condition : str, default is Undefined, optional
        The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
    conditionVersion : str, default is Undefined, optional
        The version of the condition. Possible values are 1.0 or 2.0. Changing this forces a new resource to be created.
    delegatedManagedIdentityResourceId : str, default is Undefined, optional
        The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
    description : str, default is Undefined, optional
        The description for this Role Assignment. Changing this forces a new resource to be created.
    id : str, default is Undefined, optional
        The Role Assignment ID.
    name : str, default is Undefined, optional
        A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
    principalId : str, default is Undefined, optional
        The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
    principalType : str, default is Undefined, optional
        The type of the principal_id. Possible values are User, Group and ServicePrincipal. Changing this forces a new resource to be created. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.
    roleDefinitionId : str, default is Undefined, optional
        The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with role_definition_name.
    roleDefinitionName : str, default is Undefined, optional
        The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with role_definition_id.
    scope : str, default is Undefined, optional
        The scope at which the Role Assignment applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM, or /providers/Microsoft.Management/managementGroups/myMG. Changing this forces a new resource to be created.
    skipServicePrincipalAadCheck : bool, default is Undefined, optional
        If the principal_id is a newly provisioned Service Principal set this value to true to skip the Azure Active Directory check which may fail due to replication lag. This argument is only valid if the principal_id is a Service Principal identity. Defaults to false.
    """


    condition?: str

    conditionVersion?: str

    delegatedManagedIdentityResourceId?: str

    description?: str

    id?: str

    name?: str

    principalId?: str

    principalType?: str

    roleDefinitionId?: str

    roleDefinitionName?: str

    scope?: str

    skipServicePrincipalAadCheck?: bool


schema AuthorizationAzureUpboundIoV1beta1RoleAssignmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


