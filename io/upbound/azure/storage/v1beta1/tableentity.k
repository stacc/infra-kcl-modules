"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TableEntity:
    r"""
    TableEntity is the Schema for the TableEntitys API. Manages an Entity within a Table in an Azure Storage Account.

    Attributes
    ----------
    apiVersion : str, default is "storage.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TableEntity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageAzureUpboundIoV1beta1TableEntitySpec, default is Undefined, required
        spec
    status : StorageAzureUpboundIoV1beta1TableEntityStatus, default is Undefined, optional
        status
    """


    apiVersion: "storage.azure.upbound.io/v1beta1" = "storage.azure.upbound.io/v1beta1"

    kind: "TableEntity" = "TableEntity"

    metadata?: v1.ObjectMeta

    spec: StorageAzureUpboundIoV1beta1TableEntitySpec

    status?: StorageAzureUpboundIoV1beta1TableEntityStatus


schema StorageAzureUpboundIoV1beta1TableEntitySpec:
    r"""
    TableEntitySpec defines the desired state of TableEntity

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageAzureUpboundIoV1beta1TableEntitySpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageAzureUpboundIoV1beta1TableEntitySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageAzureUpboundIoV1beta1TableEntitySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageAzureUpboundIoV1beta1TableEntitySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: StorageAzureUpboundIoV1beta1TableEntitySpecForProvider

    initProvider?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: StorageAzureUpboundIoV1beta1TableEntitySpecProviderConfigRef

    publishConnectionDetailsTo?: StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: StorageAzureUpboundIoV1beta1TableEntitySpecWriteConnectionSecretToRef


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProvider:
    r"""
    storage azure upbound io v1beta1 table entity spec for provider

    Attributes
    ----------
    entity : {str:str}, default is Undefined, optional
        A map of key/value pairs that describe the entity to be inserted/merged in to the storage table.
    partitionKey : str, default is Undefined, optional
        The key for the partition where the entity will be inserted/merged. Changing this forces a new resource to be created.
    rowKey : str, default is Undefined, optional
        The key for the row where the entity will be inserted/merged. Changing this forces a new resource to be created.
    storageAccountName : str, default is Undefined, optional
        storage account name
    storageAccountNameRef : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameRef, default is Undefined, optional
        storage account name ref
    storageAccountNameSelector : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameSelector, default is Undefined, optional
        storage account name selector
    storageTableId : str, default is Undefined, optional
        The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
    storageTableIdRef : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDRef, default is Undefined, optional
        storage table Id ref
    storageTableIdSelector : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDSelector, default is Undefined, optional
        storage table Id selector
    tableName : str, default is Undefined, optional
        table name
    tableNameRef : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameSelector, default is Undefined, optional
        table name selector
    """


    entity?: {str:str}

    partitionKey?: str

    rowKey?: str

    storageAccountName?: str

    storageAccountNameRef?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameRef

    storageAccountNameSelector?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameSelector

    storageTableId?: str

    storageTableIdRef?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDRef

    storageTableIdSelector?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDSelector

    tableName?: str

    tableNameRef?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameRef

    tableNameSelector?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameSelector


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameRef:
    r"""
    Reference to a Account in storage to populate storageAccountName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameSelector:
    r"""
    Selector for a Account in storage to populate storageAccountName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameSelectorPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageAccountNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDRef:
    r"""
    Reference to a Table in storage to populate storageTableId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDSelector:
    r"""
    Selector for a Table in storage to populate storageTableId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDSelectorPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderStorageTableIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameRef:
    r"""
    Reference to a Table in storage to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameSelector:
    r"""
    Selector for a Table in storage to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameSelectorPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecForProviderTableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    entity : {str:str}, default is Undefined, optional
        A map of key/value pairs that describe the entity to be inserted/merged in to the storage table.
    partitionKey : str, default is Undefined, optional
        The key for the partition where the entity will be inserted/merged. Changing this forces a new resource to be created.
    rowKey : str, default is Undefined, optional
        The key for the row where the entity will be inserted/merged. Changing this forces a new resource to be created.
    storageAccountName : str, default is Undefined, optional
        storage account name
    storageAccountNameRef : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameRef, default is Undefined, optional
        storage account name ref
    storageAccountNameSelector : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameSelector, default is Undefined, optional
        storage account name selector
    storageTableId : str, default is Undefined, optional
        The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
    storageTableIdRef : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDRef, default is Undefined, optional
        storage table Id ref
    storageTableIdSelector : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDSelector, default is Undefined, optional
        storage table Id selector
    tableName : str, default is Undefined, optional
        table name
    tableNameRef : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameSelector, default is Undefined, optional
        table name selector
    """


    entity?: {str:str}

    partitionKey?: str

    rowKey?: str

    storageAccountName?: str

    storageAccountNameRef?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameRef

    storageAccountNameSelector?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameSelector

    storageTableId?: str

    storageTableIdRef?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDRef

    storageTableIdSelector?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDSelector

    tableName?: str

    tableNameRef?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameRef

    tableNameSelector?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameSelector


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameRef:
    r"""
    Reference to a Account in storage to populate storageAccountName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameSelector:
    r"""
    Selector for a Account in storage to populate storageAccountName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameSelectorPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageAccountNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDRef:
    r"""
    Reference to a Table in storage to populate storageTableId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDSelector:
    r"""
    Selector for a Table in storage to populate storageTableId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDSelectorPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderStorageTableIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameRef:
    r"""
    Reference to a Table in storage to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameSelector:
    r"""
    Selector for a Table in storage to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameSelectorPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecInitProviderTableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecProviderConfigRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToConfigRef

    metadata?: StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToMetadata

    name: str


schema StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToConfigRefPolicy


schema StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1TableEntitySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema StorageAzureUpboundIoV1beta1TableEntitySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema StorageAzureUpboundIoV1beta1TableEntityStatus:
    r"""
    TableEntityStatus defines the observed state of TableEntity.

    Attributes
    ----------
    atProvider : StorageAzureUpboundIoV1beta1TableEntityStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageAzureUpboundIoV1beta1TableEntityStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: StorageAzureUpboundIoV1beta1TableEntityStatusAtProvider

    conditions?: [StorageAzureUpboundIoV1beta1TableEntityStatusConditionsItems0]

    observedGeneration?: int


schema StorageAzureUpboundIoV1beta1TableEntityStatusAtProvider:
    r"""
    storage azure upbound io v1beta1 table entity status at provider

    Attributes
    ----------
    entity : {str:str}, default is Undefined, optional
        A map of key/value pairs that describe the entity to be inserted/merged in to the storage table.
    id : str, default is Undefined, optional
        The ID of the Entity within the Table in the Storage Account.
    partitionKey : str, default is Undefined, optional
        The key for the partition where the entity will be inserted/merged. Changing this forces a new resource to be created.
    rowKey : str, default is Undefined, optional
        The key for the row where the entity will be inserted/merged. Changing this forces a new resource to be created.
    storageAccountName : str, default is Undefined, optional
        storage account name
    storageTableId : str, default is Undefined, optional
        The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
    tableName : str, default is Undefined, optional
        table name
    """


    entity?: {str:str}

    id?: str

    partitionKey?: str

    rowKey?: str

    storageAccountName?: str

    storageTableId?: str

    tableName?: str


schema StorageAzureUpboundIoV1beta1TableEntityStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


