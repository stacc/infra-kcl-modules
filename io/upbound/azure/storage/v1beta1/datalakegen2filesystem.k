"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DataLakeGen2FileSystem:
    r"""
    DataLakeGen2FileSystem is the Schema for the DataLakeGen2FileSystems API. Manages a Data Lake Gen2 File System within an Azure Storage Account.

    Attributes
    ----------
    apiVersion : str, default is "storage.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DataLakeGen2FileSystem", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpec, default is Undefined, required
        spec
    status : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatus, default is Undefined, optional
        status
    """


    apiVersion: "storage.azure.upbound.io/v1beta1" = "storage.azure.upbound.io/v1beta1"

    kind: "DataLakeGen2FileSystem" = "DataLakeGen2FileSystem"

    metadata?: v1.ObjectMeta

    spec: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpec

    status?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatus


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpec:
    r"""
    DataLakeGen2FileSystemSpec defines the desired state of DataLakeGen2FileSystem

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProvider

    initProvider?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecProviderConfigRef

    publishConnectionDetailsTo?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecWriteConnectionSecretToRef


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProvider:
    r"""
    storage azure upbound io v1beta1 data lake gen2 file system spec for provider

    Attributes
    ----------
    ace : [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderAceItems0], default is Undefined, optional
        One or more ace blocks as defined below to specify the entries for the ACL for the path.
    defaultEncryptionScope : str, default is Undefined, optional
        The default encryption scope to use for this filesystem. Changing this forces a new resource to be created.
    group : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. /). Possible values also include $superuser.
    owner : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. /). Possible values also include $superuser.
    properties : {str:str}, default is Undefined, optional
        A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
    storageAccountId : str, default is Undefined, optional
        Specifies the ID of the Storage Account in which the Data Lake Gen2 File System should exist. Changing this forces a new resource to be created.
    storageAccountIdRef : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    """


    ace?: [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderAceItems0]

    defaultEncryptionScope?: str

    group?: str

    owner?: str

    properties?: {str:str}

    storageAccountId?: str

    storageAccountIdRef?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDRef

    storageAccountIdSelector?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDSelector


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderAceItems0:
    r"""
    storage azure upbound io v1beta1 data lake gen2 file system spec for provider ace items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for user or group entries.
    permissions : str, default is Undefined, optional
        Specifies the permissions for the entry in rwx form. For example, rwx gives full permissions but r-- only gives read permissions.
    scope : str, default is Undefined, optional
        Specifies whether the ACE represents an access entry or a default entry. Default value is access.
    $type : str, default is Undefined, optional
        Specifies the type of entry. Can be user, group, mask or other.
    """


    id?: str

    permissions?: str

    scope?: str

    $type?: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDRefPolicy


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDSelectorPolicy


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecForProviderStorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    ace : [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderAceItems0], default is Undefined, optional
        One or more ace blocks as defined below to specify the entries for the ACL for the path.
    defaultEncryptionScope : str, default is Undefined, optional
        The default encryption scope to use for this filesystem. Changing this forces a new resource to be created.
    group : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. /). Possible values also include $superuser.
    owner : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. /). Possible values also include $superuser.
    properties : {str:str}, default is Undefined, optional
        A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
    storageAccountId : str, default is Undefined, optional
        Specifies the ID of the Storage Account in which the Data Lake Gen2 File System should exist. Changing this forces a new resource to be created.
    storageAccountIdRef : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    """


    ace?: [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderAceItems0]

    defaultEncryptionScope?: str

    group?: str

    owner?: str

    properties?: {str:str}

    storageAccountId?: str

    storageAccountIdRef?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDRef

    storageAccountIdSelector?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDSelector


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderAceItems0:
    r"""
    storage azure upbound io v1beta1 data lake gen2 file system spec init provider ace items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for user or group entries.
    permissions : str, default is Undefined, optional
        Specifies the permissions for the entry in rwx form. For example, rwx gives full permissions but r-- only gives read permissions.
    scope : str, default is Undefined, optional
        Specifies whether the ACE represents an access entry or a default entry. Default value is access.
    $type : str, default is Undefined, optional
        Specifies the type of entry. Can be user, group, mask or other.
    """


    id?: str

    permissions?: str

    scope?: str

    $type?: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDRefPolicy


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDSelectorPolicy


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecInitProviderStorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecProviderConfigRefPolicy


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToConfigRef

    metadata?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToMetadata

    name: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToConfigRefPolicy


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatus:
    r"""
    DataLakeGen2FileSystemStatus defines the observed state of DataLakeGen2FileSystem.

    Attributes
    ----------
    atProvider : StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusAtProvider

    conditions?: [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusConditionsItems0]

    observedGeneration?: int


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusAtProvider:
    r"""
    storage azure upbound io v1beta1 data lake gen2 file system status at provider

    Attributes
    ----------
    ace : [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusAtProviderAceItems0], default is Undefined, optional
        One or more ace blocks as defined below to specify the entries for the ACL for the path.
    defaultEncryptionScope : str, default is Undefined, optional
        The default encryption scope to use for this filesystem. Changing this forces a new resource to be created.
    group : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. /). Possible values also include $superuser.
    id : str, default is Undefined, optional
        The ID of the Data Lake Gen2 File System.
    owner : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. /). Possible values also include $superuser.
    properties : {str:str}, default is Undefined, optional
        A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
    storageAccountId : str, default is Undefined, optional
        Specifies the ID of the Storage Account in which the Data Lake Gen2 File System should exist. Changing this forces a new resource to be created.
    """


    ace?: [StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusAtProviderAceItems0]

    defaultEncryptionScope?: str

    group?: str

    id?: str

    owner?: str

    properties?: {str:str}

    storageAccountId?: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusAtProviderAceItems0:
    r"""
    storage azure upbound io v1beta1 data lake gen2 file system status at provider ace items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for user or group entries.
    permissions : str, default is Undefined, optional
        Specifies the permissions for the entry in rwx form. For example, rwx gives full permissions but r-- only gives read permissions.
    scope : str, default is Undefined, optional
        Specifies whether the ACE represents an access entry or a default entry. Default value is access.
    $type : str, default is Undefined, optional
        Specifies the type of entry. Can be user, group, mask or other.
    """


    id?: str

    permissions?: str

    scope?: str

    $type?: str


schema StorageAzureUpboundIoV1beta1DataLakeGen2FileSystemStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


