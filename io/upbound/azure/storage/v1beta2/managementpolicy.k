"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ManagementPolicy:
    r"""
    ManagementPolicy is the Schema for the ManagementPolicys API. Manages an Azure Storage Account Management Policy.

    Attributes
    ----------
    apiVersion : str, default is "storage.azure.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagementPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageAzureUpboundIoV1beta2ManagementPolicySpec, default is Undefined, required
        spec
    status : StorageAzureUpboundIoV1beta2ManagementPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "storage.azure.upbound.io/v1beta2" = "storage.azure.upbound.io/v1beta2"

    kind: "ManagementPolicy" = "ManagementPolicy"

    metadata?: v1.ObjectMeta

    spec: StorageAzureUpboundIoV1beta2ManagementPolicySpec

    status?: StorageAzureUpboundIoV1beta2ManagementPolicyStatus


schema StorageAzureUpboundIoV1beta2ManagementPolicySpec:
    r"""
    ManagementPolicySpec defines the desired state of ManagementPolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageAzureUpboundIoV1beta2ManagementPolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageAzureUpboundIoV1beta2ManagementPolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProvider

    initProvider?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: StorageAzureUpboundIoV1beta2ManagementPolicySpecProviderConfigRef

    publishConnectionDetailsTo?: StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: StorageAzureUpboundIoV1beta2ManagementPolicySpecWriteConnectionSecretToRef


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProvider:
    r"""
    storage azure upbound io v1beta2 management policy spec for provider

    Attributes
    ----------
    $rule : [StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0], default is Undefined, optional
        A rule block as documented below.
    storageAccountId : str, default is Undefined, optional
        Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
    storageAccountIdRef : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    """


    $rule?: [StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0]

    storageAccountId?: str

    storageAccountIdRef?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDRef

    storageAccountIdSelector?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDSelector


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0:
    r"""
    storage azure upbound io v1beta2 management policy spec for provider rule items0

    Attributes
    ----------
    actions : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0Actions, default is Undefined, optional
        actions
    enabled : bool, default is Undefined, optional
        Boolean to specify whether the rule is enabled.
    filters : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0Filters, default is Undefined, optional
        filters
    name : str, default is Undefined, optional
        The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
    """


    actions?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0Actions

    enabled?: bool

    filters?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0Filters

    name?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0Actions:
    r"""
    An actions block as documented below.

    Attributes
    ----------
    baseBlob : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsBaseBlob, default is Undefined, optional
        base blob
    snapshot : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsSnapshot, default is Undefined, optional
        snapshot
    version : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsVersion, default is Undefined, optional
        version
    """


    baseBlob?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsBaseBlob

    snapshot?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsSnapshot

    version?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsVersion


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsBaseBlob:
    r"""
    A base_blob block as documented below.

    Attributes
    ----------
    autoTierToHotFromCoolEnabled : bool, default is Undefined, optional
        Whether a blob should automatically be tiered from cool back to hot if it's accessed again after being tiered to cool. Defaults to false.
    deleteAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to delete the blob. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    autoTierToHotFromCoolEnabled?: bool

    deleteAfterDaysSinceCreationGreaterThan?: float

    deleteAfterDaysSinceLastAccessTimeGreaterThan?: float

    deleteAfterDaysSinceModificationGreaterThan?: float

    tierToArchiveAfterDaysSinceCreationGreaterThan?: float

    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToArchiveAfterDaysSinceModificationGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float

    tierToColdAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToColdAfterDaysSinceModificationGreaterThan?: float

    tierToCoolAfterDaysSinceCreationGreaterThan?: float

    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToCoolAfterDaysSinceModificationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsSnapshot:
    r"""
    A snapshot block as documented below.

    Attributes
    ----------
    changeTierToArchiveAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to -1.
    changeTierToCoolAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    changeTierToArchiveAfterDaysSinceCreation?: float

    changeTierToCoolAfterDaysSinceCreation?: float

    deleteAfterDaysSinceCreationGreaterThan?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0ActionsVersion:
    r"""
    A version block as documented below.

    Attributes
    ----------
    changeTierToArchiveAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to -1.
    changeTierToCoolAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to delete the blob version. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    changeTierToArchiveAfterDaysSinceCreation?: float

    changeTierToCoolAfterDaysSinceCreation?: float

    deleteAfterDaysSinceCreation?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0Filters:
    r"""
    A filters block as documented below.

    Attributes
    ----------
    blobTypes : [str], default is Undefined, optional
        An array of predefined values. Valid options are blockBlob and appendBlob.
    matchBlobIndexTag : [StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0FiltersMatchBlobIndexTagItems0], default is Undefined, optional
        A match_blob_index_tag block as defined below. The block defines the blob index tag based filtering for blob objects.
    prefixMatch : [str], default is Undefined, optional
        An array of strings for prefixes to be matched.
    """


    blobTypes?: [str]

    matchBlobIndexTag?: [StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0FiltersMatchBlobIndexTagItems0]

    prefixMatch?: [str]


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderRuleItems0FiltersMatchBlobIndexTagItems0:
    r"""
    storage azure upbound io v1beta2 management policy spec for provider rule items0 filters match blob index tag items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
    operation : str, default is Undefined, optional
        The comparison operator which is used for object comparison and filtering. Possible value is ==. Defaults to ==.
    value : str, default is Undefined, optional
        The filter tag value used for tag based filtering for blob objects.
    """


    name?: str

    operation?: str

    value?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDRefPolicy


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDSelectorPolicy


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecForProviderStorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    $rule : [StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0], default is Undefined, optional
        A rule block as documented below.
    storageAccountId : str, default is Undefined, optional
        Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
    storageAccountIdRef : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    """


    $rule?: [StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0]

    storageAccountId?: str

    storageAccountIdRef?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDRef

    storageAccountIdSelector?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDSelector


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0:
    r"""
    storage azure upbound io v1beta2 management policy spec init provider rule items0

    Attributes
    ----------
    actions : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0Actions, default is Undefined, optional
        actions
    enabled : bool, default is Undefined, optional
        Boolean to specify whether the rule is enabled.
    filters : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0Filters, default is Undefined, optional
        filters
    name : str, default is Undefined, optional
        The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
    """


    actions?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0Actions

    enabled?: bool

    filters?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0Filters

    name?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0Actions:
    r"""
    An actions block as documented below.

    Attributes
    ----------
    baseBlob : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsBaseBlob, default is Undefined, optional
        base blob
    snapshot : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsSnapshot, default is Undefined, optional
        snapshot
    version : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsVersion, default is Undefined, optional
        version
    """


    baseBlob?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsBaseBlob

    snapshot?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsSnapshot

    version?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsVersion


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsBaseBlob:
    r"""
    A base_blob block as documented below.

    Attributes
    ----------
    autoTierToHotFromCoolEnabled : bool, default is Undefined, optional
        Whether a blob should automatically be tiered from cool back to hot if it's accessed again after being tiered to cool. Defaults to false.
    deleteAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to delete the blob. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    autoTierToHotFromCoolEnabled?: bool

    deleteAfterDaysSinceCreationGreaterThan?: float

    deleteAfterDaysSinceLastAccessTimeGreaterThan?: float

    deleteAfterDaysSinceModificationGreaterThan?: float

    tierToArchiveAfterDaysSinceCreationGreaterThan?: float

    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToArchiveAfterDaysSinceModificationGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float

    tierToColdAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToColdAfterDaysSinceModificationGreaterThan?: float

    tierToCoolAfterDaysSinceCreationGreaterThan?: float

    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToCoolAfterDaysSinceModificationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsSnapshot:
    r"""
    A snapshot block as documented below.

    Attributes
    ----------
    changeTierToArchiveAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to -1.
    changeTierToCoolAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    changeTierToArchiveAfterDaysSinceCreation?: float

    changeTierToCoolAfterDaysSinceCreation?: float

    deleteAfterDaysSinceCreationGreaterThan?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0ActionsVersion:
    r"""
    A version block as documented below.

    Attributes
    ----------
    changeTierToArchiveAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to -1.
    changeTierToCoolAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to delete the blob version. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    changeTierToArchiveAfterDaysSinceCreation?: float

    changeTierToCoolAfterDaysSinceCreation?: float

    deleteAfterDaysSinceCreation?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0Filters:
    r"""
    A filters block as documented below.

    Attributes
    ----------
    blobTypes : [str], default is Undefined, optional
        An array of predefined values. Valid options are blockBlob and appendBlob.
    matchBlobIndexTag : [StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0FiltersMatchBlobIndexTagItems0], default is Undefined, optional
        A match_blob_index_tag block as defined below. The block defines the blob index tag based filtering for blob objects.
    prefixMatch : [str], default is Undefined, optional
        An array of strings for prefixes to be matched.
    """


    blobTypes?: [str]

    matchBlobIndexTag?: [StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0FiltersMatchBlobIndexTagItems0]

    prefixMatch?: [str]


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderRuleItems0FiltersMatchBlobIndexTagItems0:
    r"""
    storage azure upbound io v1beta2 management policy spec init provider rule items0 filters match blob index tag items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
    operation : str, default is Undefined, optional
        The comparison operator which is used for object comparison and filtering. Possible value is ==. Defaults to ==.
    value : str, default is Undefined, optional
        The filter tag value used for tag based filtering for blob objects.
    """


    name?: str

    operation?: str

    value?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDRefPolicy


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDSelectorPolicy


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecInitProviderStorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta2ManagementPolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta2ManagementPolicySpecProviderConfigRefPolicy


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToConfigRef

    metadata?: StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToMetadata

    name: str


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToConfigRefPolicy


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatus:
    r"""
    ManagementPolicyStatus defines the observed state of ManagementPolicy.

    Attributes
    ----------
    atProvider : StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageAzureUpboundIoV1beta2ManagementPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProvider

    conditions?: [StorageAzureUpboundIoV1beta2ManagementPolicyStatusConditionsItems0]

    observedGeneration?: int


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProvider:
    r"""
    storage azure upbound io v1beta2 management policy status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ID of the Storage Account Management Policy.
    $rule : [StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0], default is Undefined, optional
        A rule block as documented below.
    storageAccountId : str, default is Undefined, optional
        Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
    """


    id?: str

    $rule?: [StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0]

    storageAccountId?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0:
    r"""
    storage azure upbound io v1beta2 management policy status at provider rule items0

    Attributes
    ----------
    actions : StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0Actions, default is Undefined, optional
        actions
    enabled : bool, default is Undefined, optional
        Boolean to specify whether the rule is enabled.
    filters : StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0Filters, default is Undefined, optional
        filters
    name : str, default is Undefined, optional
        The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
    """


    actions?: StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0Actions

    enabled?: bool

    filters?: StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0Filters

    name?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0Actions:
    r"""
    An actions block as documented below.

    Attributes
    ----------
    baseBlob : StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsBaseBlob, default is Undefined, optional
        base blob
    snapshot : StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsSnapshot, default is Undefined, optional
        snapshot
    version : StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsVersion, default is Undefined, optional
        version
    """


    baseBlob?: StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsBaseBlob

    snapshot?: StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsSnapshot

    version?: StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsVersion


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsBaseBlob:
    r"""
    A base_blob block as documented below.

    Attributes
    ----------
    autoTierToHotFromCoolEnabled : bool, default is Undefined, optional
        Whether a blob should automatically be tiered from cool back to hot if it's accessed again after being tiered to cool. Defaults to false.
    deleteAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to delete the blob. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan : float, default is Undefined, optional
        The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    tierToCoolAfterDaysSinceModificationGreaterThan : float, default is Undefined, optional
        The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    autoTierToHotFromCoolEnabled?: bool

    deleteAfterDaysSinceCreationGreaterThan?: float

    deleteAfterDaysSinceLastAccessTimeGreaterThan?: float

    deleteAfterDaysSinceModificationGreaterThan?: float

    tierToArchiveAfterDaysSinceCreationGreaterThan?: float

    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToArchiveAfterDaysSinceModificationGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float

    tierToColdAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToColdAfterDaysSinceModificationGreaterThan?: float

    tierToCoolAfterDaysSinceCreationGreaterThan?: float

    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan?: float

    tierToCoolAfterDaysSinceModificationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsSnapshot:
    r"""
    A snapshot block as documented below.

    Attributes
    ----------
    changeTierToArchiveAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to -1.
    changeTierToCoolAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    changeTierToArchiveAfterDaysSinceCreation?: float

    changeTierToCoolAfterDaysSinceCreation?: float

    deleteAfterDaysSinceCreationGreaterThan?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0ActionsVersion:
    r"""
    A version block as documented below.

    Attributes
    ----------
    changeTierToArchiveAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to -1.
    changeTierToCoolAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to -1.
    deleteAfterDaysSinceCreation : float, default is Undefined, optional
        The age in days after creation to delete the blob version. Must be between 0 and 99999. Defaults to -1.
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan : float, default is Undefined, optional
        The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to -1.
    tierToColdAfterDaysSinceCreationGreaterThan : float, default is Undefined, optional
        The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to -1.
    """


    changeTierToArchiveAfterDaysSinceCreation?: float

    changeTierToCoolAfterDaysSinceCreation?: float

    deleteAfterDaysSinceCreation?: float

    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: float

    tierToColdAfterDaysSinceCreationGreaterThan?: float


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0Filters:
    r"""
    A filters block as documented below.

    Attributes
    ----------
    blobTypes : [str], default is Undefined, optional
        An array of predefined values. Valid options are blockBlob and appendBlob.
    matchBlobIndexTag : [StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0FiltersMatchBlobIndexTagItems0], default is Undefined, optional
        A match_blob_index_tag block as defined below. The block defines the blob index tag based filtering for blob objects.
    prefixMatch : [str], default is Undefined, optional
        An array of strings for prefixes to be matched.
    """


    blobTypes?: [str]

    matchBlobIndexTag?: [StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0FiltersMatchBlobIndexTagItems0]

    prefixMatch?: [str]


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusAtProviderRuleItems0FiltersMatchBlobIndexTagItems0:
    r"""
    storage azure upbound io v1beta2 management policy status at provider rule items0 filters match blob index tag items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
    operation : str, default is Undefined, optional
        The comparison operator which is used for object comparison and filtering. Possible value is ==. Defaults to ==.
    value : str, default is Undefined, optional
        The filter tag value used for tag based filtering for blob objects.
    """


    name?: str

    operation?: str

    value?: str


schema StorageAzureUpboundIoV1beta2ManagementPolicyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


