"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Vault:
    r"""
    Vault is the Schema for the Vaults API. Manages a Key Vault.

    Attributes
    ----------
    apiVersion : str, default is "keyvault.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Vault", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeyvaultAzureUpboundIoV1beta1VaultSpec, default is Undefined, required
        spec
    status : KeyvaultAzureUpboundIoV1beta1VaultStatus, default is Undefined, optional
        status
    """


    apiVersion: "keyvault.azure.upbound.io/v1beta1" = "keyvault.azure.upbound.io/v1beta1"

    kind: "Vault" = "Vault"

    metadata?: v1.ObjectMeta

    spec: KeyvaultAzureUpboundIoV1beta1VaultSpec

    status?: KeyvaultAzureUpboundIoV1beta1VaultStatus


schema KeyvaultAzureUpboundIoV1beta1VaultSpec:
    r"""
    VaultSpec defines the desired state of Vault

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KeyvaultAzureUpboundIoV1beta1VaultSpecForProvider, default is Undefined, required
        for provider
    initProvider : KeyvaultAzureUpboundIoV1beta1VaultSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KeyvaultAzureUpboundIoV1beta1VaultSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KeyvaultAzureUpboundIoV1beta1VaultSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KeyvaultAzureUpboundIoV1beta1VaultSpecForProvider

    initProvider?: KeyvaultAzureUpboundIoV1beta1VaultSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KeyvaultAzureUpboundIoV1beta1VaultSpecProviderConfigRef

    publishConnectionDetailsTo?: KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KeyvaultAzureUpboundIoV1beta1VaultSpecWriteConnectionSecretToRef


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProvider:
    r"""
    keyvault azure upbound io v1beta1 vault spec for provider

    Attributes
    ----------
    contact : [KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderContactItems0], default is Undefined, optional
        One or more contact block as defined below.
    enableRbacAuthorization : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Key Vault uses Role Based Access Control (RBAC) for authorization of data actions.
    enabledForDeployment : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
    enabledForDiskEncryption : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
    enabledForTemplateDeployment : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    networkAcls : [KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderNetworkAclsItems0], default is Undefined, optional
        A network_acls block as defined below.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Whether public network access is allowed for this Key Vault. Defaults to true.
    purgeProtectionEnabled : bool, default is Undefined, optional
        Is Purge Protection enabled for this Key Vault?
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the Key Vault. Changing this forces a new resource to be created.
    resourceGroupNameRef : KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameRef, default is Undefined, optional
        resource group name ref
    resourceGroupNameSelector : KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameSelector, default is Undefined, optional
        resource group name selector
    skuName : str, default is Undefined, optional
        The Name of the SKU used for this Key Vault. Possible values are standard and premium.
    softDeleteRetentionDays : float, default is Undefined, optional
        The number of days that items should be retained for once soft-deleted. This value can be between 7 and 90 (the default) days.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
    """


    contact?: [KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderContactItems0]

    enableRbacAuthorization?: bool

    enabledForDeployment?: bool

    enabledForDiskEncryption?: bool

    enabledForTemplateDeployment?: bool

    location?: str

    networkAcls?: [KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderNetworkAclsItems0]

    publicNetworkAccessEnabled?: bool

    purgeProtectionEnabled?: bool

    resourceGroupName?: str

    resourceGroupNameRef?: KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameRef

    resourceGroupNameSelector?: KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameSelector

    skuName?: str

    softDeleteRetentionDays?: float

    tags?: {str:str}

    tenantId?: str


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderContactItems0:
    r"""
    keyvault azure upbound io v1beta1 vault spec for provider contact items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        E-mail address of the contact.
    name : str, default is Undefined, optional
        Name of the contact.
    phone : str, default is Undefined, optional
        Phone number of the contact.
    """


    email?: str

    name?: str

    phone?: str


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderNetworkAclsItems0:
    r"""
    keyvault azure upbound io v1beta1 vault spec for provider network acls items0

    Attributes
    ----------
    bypass : str, default is Undefined, optional
        Specifies which traffic can bypass the network rules. Possible values are AzureServices and None.
    defaultAction : str, default is Undefined, optional
        The Default Action to use when no rules match from ip_rules / virtual_network_subnet_ids. Possible values are Allow and Deny.
    ipRules : [str], default is Undefined, optional
        One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault.
    virtualNetworkSubnetIds : [str], default is Undefined, optional
        One or more Subnet IDs which should be able to access this Key Vault.
    """


    bypass?: str

    defaultAction?: str

    ipRules?: [str]

    virtualNetworkSubnetIds?: [str]


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameRef:
    r"""
    Reference to a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameRefPolicy


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameSelector:
    r"""
    Selector for a ResourceGroup in azure to populate resourceGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1VaultSpecForProviderResourceGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1VaultSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    contact : [KeyvaultAzureUpboundIoV1beta1VaultSpecInitProviderContactItems0], default is Undefined, optional
        One or more contact block as defined below.
    enableRbacAuthorization : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Key Vault uses Role Based Access Control (RBAC) for authorization of data actions.
    enabledForDeployment : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
    enabledForDiskEncryption : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
    enabledForTemplateDeployment : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    networkAcls : [KeyvaultAzureUpboundIoV1beta1VaultSpecInitProviderNetworkAclsItems0], default is Undefined, optional
        A network_acls block as defined below.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Whether public network access is allowed for this Key Vault. Defaults to true.
    purgeProtectionEnabled : bool, default is Undefined, optional
        Is Purge Protection enabled for this Key Vault?
    skuName : str, default is Undefined, optional
        The Name of the SKU used for this Key Vault. Possible values are standard and premium.
    softDeleteRetentionDays : float, default is Undefined, optional
        The number of days that items should be retained for once soft-deleted. This value can be between 7 and 90 (the default) days.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
    """


    contact?: [KeyvaultAzureUpboundIoV1beta1VaultSpecInitProviderContactItems0]

    enableRbacAuthorization?: bool

    enabledForDeployment?: bool

    enabledForDiskEncryption?: bool

    enabledForTemplateDeployment?: bool

    location?: str

    networkAcls?: [KeyvaultAzureUpboundIoV1beta1VaultSpecInitProviderNetworkAclsItems0]

    publicNetworkAccessEnabled?: bool

    purgeProtectionEnabled?: bool

    skuName?: str

    softDeleteRetentionDays?: float

    tags?: {str:str}

    tenantId?: str


schema KeyvaultAzureUpboundIoV1beta1VaultSpecInitProviderContactItems0:
    r"""
    keyvault azure upbound io v1beta1 vault spec init provider contact items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        E-mail address of the contact.
    name : str, default is Undefined, optional
        Name of the contact.
    phone : str, default is Undefined, optional
        Phone number of the contact.
    """


    email?: str

    name?: str

    phone?: str


schema KeyvaultAzureUpboundIoV1beta1VaultSpecInitProviderNetworkAclsItems0:
    r"""
    keyvault azure upbound io v1beta1 vault spec init provider network acls items0

    Attributes
    ----------
    bypass : str, default is Undefined, optional
        Specifies which traffic can bypass the network rules. Possible values are AzureServices and None.
    defaultAction : str, default is Undefined, optional
        The Default Action to use when no rules match from ip_rules / virtual_network_subnet_ids. Possible values are Allow and Deny.
    ipRules : [str], default is Undefined, optional
        One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault.
    virtualNetworkSubnetIds : [str], default is Undefined, optional
        One or more Subnet IDs which should be able to access this Key Vault.
    """


    bypass?: str

    defaultAction?: str

    ipRules?: [str]

    virtualNetworkSubnetIds?: [str]


schema KeyvaultAzureUpboundIoV1beta1VaultSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1VaultSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1VaultSpecProviderConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1VaultSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToConfigRef

    metadata?: KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToMetadata

    name: str


schema KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1VaultSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KeyvaultAzureUpboundIoV1beta1VaultSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1VaultStatus:
    r"""
    VaultStatus defines the observed state of Vault.

    Attributes
    ----------
    atProvider : KeyvaultAzureUpboundIoV1beta1VaultStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KeyvaultAzureUpboundIoV1beta1VaultStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KeyvaultAzureUpboundIoV1beta1VaultStatusAtProvider

    conditions?: [KeyvaultAzureUpboundIoV1beta1VaultStatusConditionsItems0]

    observedGeneration?: int


schema KeyvaultAzureUpboundIoV1beta1VaultStatusAtProvider:
    r"""
    keyvault azure upbound io v1beta1 vault status at provider

    Attributes
    ----------
    accessPolicy : [KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderAccessPolicyItems0], default is Undefined, optional
        A list of access_policy objects (up to 1024) describing access policies, as described below.
    contact : [KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderContactItems0], default is Undefined, optional
        One or more contact block as defined below.
    enableRbacAuthorization : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Key Vault uses Role Based Access Control (RBAC) for authorization of data actions.
    enabledForDeployment : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.
    enabledForDiskEncryption : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.
    enabledForTemplateDeployment : bool, default is Undefined, optional
        Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.
    id : str, default is Undefined, optional
        The ID of the Key Vault.
    location : str, default is Undefined, optional
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    networkAcls : [KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderNetworkAclsItems0], default is Undefined, optional
        A network_acls block as defined below.
    publicNetworkAccessEnabled : bool, default is Undefined, optional
        Whether public network access is allowed for this Key Vault. Defaults to true.
    purgeProtectionEnabled : bool, default is Undefined, optional
        Is Purge Protection enabled for this Key Vault?
    resourceGroupName : str, default is Undefined, optional
        The name of the resource group in which to create the Key Vault. Changing this forces a new resource to be created.
    skuName : str, default is Undefined, optional
        The Name of the SKU used for this Key Vault. Possible values are standard and premium.
    softDeleteRetentionDays : float, default is Undefined, optional
        The number of days that items should be retained for once soft-deleted. This value can be between 7 and 90 (the default) days.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
    vaultUri : str, default is Undefined, optional
        The URI of the Key Vault, used for performing operations on keys and secrets.
    """


    accessPolicy?: [KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderAccessPolicyItems0]

    contact?: [KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderContactItems0]

    enableRbacAuthorization?: bool

    enabledForDeployment?: bool

    enabledForDiskEncryption?: bool

    enabledForTemplateDeployment?: bool

    id?: str

    location?: str

    networkAcls?: [KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderNetworkAclsItems0]

    publicNetworkAccessEnabled?: bool

    purgeProtectionEnabled?: bool

    resourceGroupName?: str

    skuName?: str

    softDeleteRetentionDays?: float

    tags?: {str:str}

    tenantId?: str

    vaultUri?: str


schema KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderAccessPolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 vault status at provider access policy items0

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        The object ID of an Application in Azure Active Directory.
    certificatePermissions : [str], default is Undefined, optional
        List of certificate permissions, must be one or more from the following: Backup, Create, Delete, DeleteIssuers, Get, GetIssuers, Import, List, ListIssuers, ManageContacts, ManageIssuers, Purge, Recover, Restore, SetIssuers and Update.
    keyPermissions : [str], default is Undefined, optional
        List of key permissions. Possible values are Backup, Create, Decrypt, Delete, Encrypt, Get, Import, List, Purge, Recover, Restore, Sign, UnwrapKey, Update, Verify, WrapKey, Release, Rotate, GetRotationPolicy and SetRotationPolicy.
    objectId : str, default is Undefined, optional
        The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.
    secretPermissions : [str], default is Undefined, optional
        List of secret permissions, must be one or more from the following: Backup, Delete, Get, List, Purge, Recover, Restore and Set.
    storagePermissions : [str], default is Undefined, optional
        List of storage permissions, must be one or more from the following: Backup, Delete, DeleteSAS, Get, GetSAS, List, ListSAS, Purge, Recover, RegenerateKey, Restore, Set, SetSAS and Update.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Must match the tenant_id used above.
    """


    applicationId?: str

    certificatePermissions?: [str]

    keyPermissions?: [str]

    objectId?: str

    secretPermissions?: [str]

    storagePermissions?: [str]

    tenantId?: str


schema KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderContactItems0:
    r"""
    keyvault azure upbound io v1beta1 vault status at provider contact items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        E-mail address of the contact.
    name : str, default is Undefined, optional
        Name of the contact.
    phone : str, default is Undefined, optional
        Phone number of the contact.
    """


    email?: str

    name?: str

    phone?: str


schema KeyvaultAzureUpboundIoV1beta1VaultStatusAtProviderNetworkAclsItems0:
    r"""
    keyvault azure upbound io v1beta1 vault status at provider network acls items0

    Attributes
    ----------
    bypass : str, default is Undefined, optional
        Specifies which traffic can bypass the network rules. Possible values are AzureServices and None.
    defaultAction : str, default is Undefined, optional
        The Default Action to use when no rules match from ip_rules / virtual_network_subnet_ids. Possible values are Allow and Deny.
    ipRules : [str], default is Undefined, optional
        One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault.
    virtualNetworkSubnetIds : [str], default is Undefined, optional
        One or more Subnet IDs which should be able to access this Key Vault.
    """


    bypass?: str

    defaultAction?: str

    ipRules?: [str]

    virtualNetworkSubnetIds?: [str]


schema KeyvaultAzureUpboundIoV1beta1VaultStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


