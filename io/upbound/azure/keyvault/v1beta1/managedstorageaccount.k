"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ManagedStorageAccount:
    r"""
    ManagedStorageAccount is the Schema for the ManagedStorageAccounts API. Manages a Key Vault Managed Storage Account.

    Attributes
    ----------
    apiVersion : str, default is "keyvault.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagedStorageAccount", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpec, default is Undefined, required
        spec
    status : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatus, default is Undefined, optional
        status
    """


    apiVersion: "keyvault.azure.upbound.io/v1beta1" = "keyvault.azure.upbound.io/v1beta1"

    kind: "ManagedStorageAccount" = "ManagedStorageAccount"

    metadata?: v1.ObjectMeta

    spec: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpec

    status?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatus


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpec:
    r"""
    ManagedStorageAccountSpec defines the desired state of ManagedStorageAccount

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProvider, default is Undefined, required
        for provider
    initProvider : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProvider

    initProvider?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecProviderConfigRef

    publishConnectionDetailsTo?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecWriteConnectionSecretToRef


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProvider:
    r"""
    keyvault azure upbound io v1beta1 managed storage account spec for provider

    Attributes
    ----------
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Managed Storage Account should be created. Changing this forces a new resource to be created.
    keyVaultIdRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDRef, default is Undefined, optional
        key vault Id ref
    keyVaultIdSelector : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDSelector, default is Undefined, optional
        key vault Id selector
    regenerateKeyAutomatically : bool, default is Undefined, optional
        Should Storage Account access key be regenerated periodically?
    regenerationPeriod : str, default is Undefined, optional
        How often Storage Account access key should be regenerated. Value needs to be in ISO 8601 duration format.
    storageAccountId : str, default is Undefined, optional
        The ID of the Storage Account.
    storageAccountIdRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    storageAccountKey : str, default is Undefined, optional
        Which Storage Account access key that is managed by Key Vault. Possible values are key1 and key2.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to the Key Vault Managed Storage Account. Changing this forces a new resource to be created.
    """


    keyVaultId?: str

    keyVaultIdRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDRef

    keyVaultIdSelector?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDSelector

    regenerateKeyAutomatically?: bool

    regenerationPeriod?: str

    storageAccountId?: str

    storageAccountIdRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDRef

    storageAccountIdSelector?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDSelector

    storageAccountKey?: str

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDRef:
    r"""
    Reference to a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDSelector:
    r"""
    Selector for a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderKeyVaultIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecForProviderStorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Managed Storage Account should be created. Changing this forces a new resource to be created.
    keyVaultIdRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDRef, default is Undefined, optional
        key vault Id ref
    keyVaultIdSelector : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDSelector, default is Undefined, optional
        key vault Id selector
    regenerateKeyAutomatically : bool, default is Undefined, optional
        Should Storage Account access key be regenerated periodically?
    regenerationPeriod : str, default is Undefined, optional
        How often Storage Account access key should be regenerated. Value needs to be in ISO 8601 duration format.
    storageAccountId : str, default is Undefined, optional
        The ID of the Storage Account.
    storageAccountIdRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDRef, default is Undefined, optional
        storage account Id ref
    storageAccountIdSelector : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDSelector, default is Undefined, optional
        storage account Id selector
    storageAccountKey : str, default is Undefined, optional
        Which Storage Account access key that is managed by Key Vault. Possible values are key1 and key2.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to the Key Vault Managed Storage Account. Changing this forces a new resource to be created.
    """


    keyVaultId?: str

    keyVaultIdRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDRef

    keyVaultIdSelector?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDSelector

    regenerateKeyAutomatically?: bool

    regenerationPeriod?: str

    storageAccountId?: str

    storageAccountIdRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDRef

    storageAccountIdSelector?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDSelector

    storageAccountKey?: str

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDRef:
    r"""
    Reference to a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDSelector:
    r"""
    Selector for a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderKeyVaultIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDRef:
    r"""
    Reference to a Account in storage to populate storageAccountId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDSelector:
    r"""
    Selector for a Account in storage to populate storageAccountId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecInitProviderStorageAccountIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecProviderConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToConfigRef

    metadata?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToMetadata

    name: str


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatus:
    r"""
    ManagedStorageAccountStatus defines the observed state of ManagedStorageAccount.

    Attributes
    ----------
    atProvider : KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatusAtProvider

    conditions?: [KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatusConditionsItems0]

    observedGeneration?: int


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatusAtProvider:
    r"""
    keyvault azure upbound io v1beta1 managed storage account status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ID of the Key Vault Managed Storage Account.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Managed Storage Account should be created. Changing this forces a new resource to be created.
    regenerateKeyAutomatically : bool, default is Undefined, optional
        Should Storage Account access key be regenerated periodically?
    regenerationPeriod : str, default is Undefined, optional
        How often Storage Account access key should be regenerated. Value needs to be in ISO 8601 duration format.
    storageAccountId : str, default is Undefined, optional
        The ID of the Storage Account.
    storageAccountKey : str, default is Undefined, optional
        Which Storage Account access key that is managed by Key Vault. Possible values are key1 and key2.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags which should be assigned to the Key Vault Managed Storage Account. Changing this forces a new resource to be created.
    """


    id?: str

    keyVaultId?: str

    regenerateKeyAutomatically?: bool

    regenerationPeriod?: str

    storageAccountId?: str

    storageAccountKey?: str

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1ManagedStorageAccountStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


