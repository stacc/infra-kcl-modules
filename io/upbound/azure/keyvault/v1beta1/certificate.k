"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Certificate:
    r"""
    Certificate is the Schema for the Certificates API. Manages a Key Vault Certificate.

    Attributes
    ----------
    apiVersion : str, default is "keyvault.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Certificate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeyvaultAzureUpboundIoV1beta1CertificateSpec, default is Undefined, required
        spec
    status : KeyvaultAzureUpboundIoV1beta1CertificateStatus, default is Undefined, optional
        status
    """


    apiVersion: "keyvault.azure.upbound.io/v1beta1" = "keyvault.azure.upbound.io/v1beta1"

    kind: "Certificate" = "Certificate"

    metadata?: v1.ObjectMeta

    spec: KeyvaultAzureUpboundIoV1beta1CertificateSpec

    status?: KeyvaultAzureUpboundIoV1beta1CertificateStatus


schema KeyvaultAzureUpboundIoV1beta1CertificateSpec:
    r"""
    CertificateSpec defines the desired state of Certificate

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProvider, default is Undefined, required
        for provider
    initProvider : KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProvider

    initProvider?: KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KeyvaultAzureUpboundIoV1beta1CertificateSpecProviderConfigRef

    publishConnectionDetailsTo?: KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KeyvaultAzureUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProvider:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider

    Attributes
    ----------
    certificate : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0], default is Undefined, optional
        A certificate block as defined below, used to Import an existing certificate. Changing this will create a new version of the Key Vault Certificate.
    certificatePolicy : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0], default is Undefined, optional
        A certificate_policy block as defined below. Changing this (except the lifetime_action field) will create a new version of the Key Vault Certificate.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Certificate should be created. Changing this forces a new resource to be created.
    keyVaultIdRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDRef, default is Undefined, optional
        key vault Id ref
    keyVaultIdSelector : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDSelector, default is Undefined, optional
        key vault Id selector
    name : str, default is Undefined, optional
        Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    certificate?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0]

    certificatePolicy?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0]

    keyVaultId?: str

    keyVaultIdRef?: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDRef

    keyVaultIdSelector?: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDSelector

    name?: str

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate items0

    Attributes
    ----------
    contentsSecretRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0ContentsSecretRef, default is Undefined, required
        contents secret ref
    passwordSecretRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    """


    contentsSecretRef: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0ContentsSecretRef

    passwordSecretRef?: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0PasswordSecretRef


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0ContentsSecretRef:
    r"""
    The base64-encoded certificate contents.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificateItems0PasswordSecretRef:
    r"""
    The password associated with the certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0

    Attributes
    ----------
    issuerParameters : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0IssuerParametersItems0], default is Undefined, optional
        A issuer_parameters block as defined below.
    keyProperties : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0KeyPropertiesItems0], default is Undefined, optional
        A key_properties block as defined below.
    lifetimeAction : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0], default is Undefined, optional
        A lifetime_action block as defined below.
    secretProperties : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0SecretPropertiesItems0], default is Undefined, optional
        A secret_properties block as defined below.
    x509CertificateProperties : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0X509CertificatePropertiesItems0], default is Undefined, optional
        A x509_certificate_properties block as defined below. Required when certificate block is not specified.
    """


    issuerParameters?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0IssuerParametersItems0]

    keyProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0KeyPropertiesItems0]

    lifetimeAction?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0]

    secretProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0SecretPropertiesItems0]

    x509CertificateProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0X509CertificatePropertiesItems0]


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0IssuerParametersItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 issuer parameters items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Certificate Issuer. Possible values include Self (for self-signed certificate), or Unknown (for a certificate issuing authority like Let's Encrypt and Azure direct supported ones).
    """


    name?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0KeyPropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 key properties items0

    Attributes
    ----------
    curve : str, default is Undefined, optional
        Specifies the curve to use when creating an EC key. Possible values are P-256, P-256K, P-384, and P-521. This field will be required in a future release if key_type is EC or EC-HSM.
    exportable : bool, default is Undefined, optional
        Is this certificate exportable?
    keySize : float, default is Undefined, optional
        The size of the key used in the certificate. Possible values include 2048, 3072, and 4096 for RSA keys, or 256, 384, and 521 for EC keys. This property is required when using RSA keys.
    keyType : str, default is Undefined, optional
        Specifies the type of key. Possible values are EC, EC-HSM, RSA, RSA-HSM and oct.
    reuseKey : bool, default is Undefined, optional
        Is the key reusable?
    """


    curve?: str

    exportable?: bool

    keySize?: float

    keyType?: str

    reuseKey?: bool


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 lifetime action items0

    Attributes
    ----------
    action : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0], default is Undefined, optional
        A action block as defined below.
    trigger : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0], default is Undefined, optional
        A trigger block as defined below.
    """


    action?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0]

    trigger?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0]


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 lifetime action items0 action items0

    Attributes
    ----------
    actionType : str, default is Undefined, optional
        The Type of action to be performed when the lifetime trigger is triggerec. Possible values include AutoRenew and EmailContacts.
    """


    actionType?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 lifetime action items0 trigger items0

    Attributes
    ----------
    daysBeforeExpiry : float, default is Undefined, optional
        The number of days before the Certificate expires that the action associated with this Trigger should run. Conflicts with lifetime_percentage.
    lifetimePercentage : float, default is Undefined, optional
        The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Conflicts with days_before_expiry.
    """


    daysBeforeExpiry?: float

    lifetimePercentage?: float


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0SecretPropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 secret properties items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The Content-Type of the Certificate, such as application/x-pkcs12 for a PFX or application/x-pem-file for a PEM.
    """


    contentType?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0X509CertificatePropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 x509 certificate properties items0

    Attributes
    ----------
    extendedKeyUsage : [str], default is Undefined, optional
        A list of Extended/Enhanced Key Usages.
    keyUsage : [str], default is Undefined, optional
        A list of uses associated with this Key. Possible values include cRLSign, dataEncipherment, decipherOnly, digitalSignature, encipherOnly, keyAgreement, keyCertSign, keyEncipherment and nonRepudiation and are case-sensitive.
    subject : str, default is Undefined, optional
        The Certificate's Subject.
    subjectAlternativeNames : [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        A subject_alternative_names block as defined below.
    validityInMonths : float, default is Undefined, optional
        The Certificates Validity Period in Months.
    """


    extendedKeyUsage?: [str]

    keyUsage?: [str]

    subject?: str

    subjectAlternativeNames?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0]

    validityInMonths?: float


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec for provider certificate policy items0 x509 certificate properties items0 subject alternative names items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        A list of alternative DNS names (FQDNs) identified by the Certificate.
    emails : [str], default is Undefined, optional
        A list of email addresses identified by this Certificate.
    upns : [str], default is Undefined, optional
        A list of User Principal Names identified by the Certificate.
    """


    dnsNames?: [str]

    emails?: [str]

    upns?: [str]


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDRef:
    r"""
    Reference to a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDSelector:
    r"""
    Selector for a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecForProviderKeyVaultIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificate : [any], default is Undefined, optional
        A certificate block as defined below, used to Import an existing certificate. Changing this will create a new version of the Key Vault Certificate.
    certificatePolicy : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0], default is Undefined, optional
        A certificate_policy block as defined below. Changing this (except the lifetime_action field) will create a new version of the Key Vault Certificate.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Certificate should be created. Changing this forces a new resource to be created.
    keyVaultIdRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDRef, default is Undefined, optional
        key vault Id ref
    keyVaultIdSelector : KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDSelector, default is Undefined, optional
        key vault Id selector
    name : str, default is Undefined, optional
        Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    certificate?: [any]

    certificatePolicy?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0]

    keyVaultId?: str

    keyVaultIdRef?: KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDRef

    keyVaultIdSelector?: KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDSelector

    name?: str

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0

    Attributes
    ----------
    issuerParameters : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0IssuerParametersItems0], default is Undefined, optional
        A issuer_parameters block as defined below.
    keyProperties : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0KeyPropertiesItems0], default is Undefined, optional
        A key_properties block as defined below.
    lifetimeAction : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0], default is Undefined, optional
        A lifetime_action block as defined below.
    secretProperties : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0SecretPropertiesItems0], default is Undefined, optional
        A secret_properties block as defined below.
    x509CertificateProperties : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0X509CertificatePropertiesItems0], default is Undefined, optional
        A x509_certificate_properties block as defined below. Required when certificate block is not specified.
    """


    issuerParameters?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0IssuerParametersItems0]

    keyProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0KeyPropertiesItems0]

    lifetimeAction?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0]

    secretProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0SecretPropertiesItems0]

    x509CertificateProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0X509CertificatePropertiesItems0]


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0IssuerParametersItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 issuer parameters items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Certificate Issuer. Possible values include Self (for self-signed certificate), or Unknown (for a certificate issuing authority like Let's Encrypt and Azure direct supported ones).
    """


    name?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0KeyPropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 key properties items0

    Attributes
    ----------
    curve : str, default is Undefined, optional
        Specifies the curve to use when creating an EC key. Possible values are P-256, P-256K, P-384, and P-521. This field will be required in a future release if key_type is EC or EC-HSM.
    exportable : bool, default is Undefined, optional
        Is this certificate exportable?
    keySize : float, default is Undefined, optional
        The size of the key used in the certificate. Possible values include 2048, 3072, and 4096 for RSA keys, or 256, 384, and 521 for EC keys. This property is required when using RSA keys.
    keyType : str, default is Undefined, optional
        Specifies the type of key. Possible values are EC, EC-HSM, RSA, RSA-HSM and oct.
    reuseKey : bool, default is Undefined, optional
        Is the key reusable?
    """


    curve?: str

    exportable?: bool

    keySize?: float

    keyType?: str

    reuseKey?: bool


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 lifetime action items0

    Attributes
    ----------
    action : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0], default is Undefined, optional
        A action block as defined below.
    trigger : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0], default is Undefined, optional
        A trigger block as defined below.
    """


    action?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0]

    trigger?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0]


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 lifetime action items0 action items0

    Attributes
    ----------
    actionType : str, default is Undefined, optional
        The Type of action to be performed when the lifetime trigger is triggerec. Possible values include AutoRenew and EmailContacts.
    """


    actionType?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 lifetime action items0 trigger items0

    Attributes
    ----------
    daysBeforeExpiry : float, default is Undefined, optional
        The number of days before the Certificate expires that the action associated with this Trigger should run. Conflicts with lifetime_percentage.
    lifetimePercentage : float, default is Undefined, optional
        The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Conflicts with days_before_expiry.
    """


    daysBeforeExpiry?: float

    lifetimePercentage?: float


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0SecretPropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 secret properties items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The Content-Type of the Certificate, such as application/x-pkcs12 for a PFX or application/x-pem-file for a PEM.
    """


    contentType?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0X509CertificatePropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 x509 certificate properties items0

    Attributes
    ----------
    extendedKeyUsage : [str], default is Undefined, optional
        A list of Extended/Enhanced Key Usages.
    keyUsage : [str], default is Undefined, optional
        A list of uses associated with this Key. Possible values include cRLSign, dataEncipherment, decipherOnly, digitalSignature, encipherOnly, keyAgreement, keyCertSign, keyEncipherment and nonRepudiation and are case-sensitive.
    subject : str, default is Undefined, optional
        The Certificate's Subject.
    subjectAlternativeNames : [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        A subject_alternative_names block as defined below.
    validityInMonths : float, default is Undefined, optional
        The Certificates Validity Period in Months.
    """


    extendedKeyUsage?: [str]

    keyUsage?: [str]

    subject?: str

    subjectAlternativeNames?: [KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0]

    validityInMonths?: float


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate spec init provider certificate policy items0 x509 certificate properties items0 subject alternative names items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        A list of alternative DNS names (FQDNs) identified by the Certificate.
    emails : [str], default is Undefined, optional
        A list of email addresses identified by this Certificate.
    upns : [str], default is Undefined, optional
        A list of User Principal Names identified by the Certificate.
    """


    dnsNames?: [str]

    emails?: [str]

    upns?: [str]


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDRef:
    r"""
    Reference to a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDSelector:
    r"""
    Selector for a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecInitProviderKeyVaultIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef

    metadata?: KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata

    name: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatus:
    r"""
    CertificateStatus defines the observed state of Certificate.

    Attributes
    ----------
    atProvider : KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KeyvaultAzureUpboundIoV1beta1CertificateStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProvider

    conditions?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusConditionsItems0]

    observedGeneration?: int


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProvider:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider

    Attributes
    ----------
    certificate : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0], default is Undefined, optional
        A certificate block as defined below, used to Import an existing certificate. Changing this will create a new version of the Key Vault Certificate.
    certificateAttribute : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateAttributeItems0], default is Undefined, optional
        A certificate_attribute block as defined below.
    certificateData : str, default is Undefined, optional
        The raw Key Vault Certificate data represented as a hexadecimal string.
    certificateDataBase64 : str, default is Undefined, optional
        The Base64 encoded Key Vault Certificate data.
    certificatePolicy : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0], default is Undefined, optional
        A certificate_policy block as defined below. Changing this (except the lifetime_action field) will create a new version of the Key Vault Certificate.
    id : str, default is Undefined, optional
        The Key Vault Certificate ID.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Certificate should be created. Changing this forces a new resource to be created.
    name : str, default is Undefined, optional
        Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created.
    resourceManagerId : str, default is Undefined, optional
        The (Versioned) ID for this Key Vault Certificate. This property points to a specific version of a Key Vault Certificate, as such using this won't auto-rotate values if used in other Azure Services.
    resourceManagerVersionlessId : str, default is Undefined, optional
        The Versionless ID of the Key Vault Certificate. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Certificate is updated.
    secretId : str, default is Undefined, optional
        The ID of the associated Key Vault Secret.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    thumbprint : str, default is Undefined, optional
        The X509 Thumbprint of the Key Vault Certificate represented as a hexadecimal string.
    version : str, default is Undefined, optional
        The current version of the Key Vault Certificate.
    versionlessId : str, default is Undefined, optional
        The Base ID of the Key Vault Certificate.
    versionlessSecretId : str, default is Undefined, optional
        The Base ID of the Key Vault Secret.
    """


    certificate?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0]

    certificateAttribute?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateAttributeItems0]

    certificateData?: str

    certificateDataBase64?: str

    certificatePolicy?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0]

    id?: str

    keyVaultId?: str

    name?: str

    resourceManagerId?: str

    resourceManagerVersionlessId?: str

    secretId?: str

    tags?: {str:str}

    thumbprint?: str

    version?: str

    versionlessId?: str

    versionlessSecretId?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateAttributeItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate attribute items0

    Attributes
    ----------
    created : str, default is Undefined, optional
        The create time of the Key Vault Certificate.
    enabled : bool, default is Undefined, optional
        whether the Key Vault Certificate is enabled.
    expires : str, default is Undefined, optional
        The expires time of the Key Vault Certificate.
    notBefore : str, default is Undefined, optional
        The not before valid time of the Key Vault Certificate.
    recoveryLevel : str, default is Undefined, optional
        The deletion recovery level of the Key Vault Certificate.
    updated : str, default is Undefined, optional
        The recent update time of the Key Vault Certificate.
    """


    created?: str

    enabled?: bool

    expires?: str

    notBefore?: str

    recoveryLevel?: str

    updated?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate items0

    Attributes
    ----------
    contentsSecretRef : KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0ContentsSecretRef, default is Undefined, required
        contents secret ref
    passwordSecretRef : KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    """


    contentsSecretRef: KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0ContentsSecretRef

    passwordSecretRef?: KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0PasswordSecretRef


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0ContentsSecretRef:
    r"""
    The base64-encoded certificate contents.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificateItems0PasswordSecretRef:
    r"""
    The password associated with the certificate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0

    Attributes
    ----------
    issuerParameters : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0IssuerParametersItems0], default is Undefined, optional
        A issuer_parameters block as defined below.
    keyProperties : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0KeyPropertiesItems0], default is Undefined, optional
        A key_properties block as defined below.
    lifetimeAction : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0], default is Undefined, optional
        A lifetime_action block as defined below.
    secretProperties : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0SecretPropertiesItems0], default is Undefined, optional
        A secret_properties block as defined below.
    x509CertificateProperties : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0X509CertificatePropertiesItems0], default is Undefined, optional
        A x509_certificate_properties block as defined below. Required when certificate block is not specified.
    """


    issuerParameters?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0IssuerParametersItems0]

    keyProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0KeyPropertiesItems0]

    lifetimeAction?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0]

    secretProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0SecretPropertiesItems0]

    x509CertificateProperties?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0X509CertificatePropertiesItems0]


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0IssuerParametersItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 issuer parameters items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Certificate Issuer. Possible values include Self (for self-signed certificate), or Unknown (for a certificate issuing authority like Let's Encrypt and Azure direct supported ones).
    """


    name?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0KeyPropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 key properties items0

    Attributes
    ----------
    curve : str, default is Undefined, optional
        Specifies the curve to use when creating an EC key. Possible values are P-256, P-256K, P-384, and P-521. This field will be required in a future release if key_type is EC or EC-HSM.
    exportable : bool, default is Undefined, optional
        Is this certificate exportable?
    keySize : float, default is Undefined, optional
        The size of the key used in the certificate. Possible values include 2048, 3072, and 4096 for RSA keys, or 256, 384, and 521 for EC keys. This property is required when using RSA keys.
    keyType : str, default is Undefined, optional
        Specifies the type of key. Possible values are EC, EC-HSM, RSA, RSA-HSM and oct.
    reuseKey : bool, default is Undefined, optional
        Is the key reusable?
    """


    curve?: str

    exportable?: bool

    keySize?: float

    keyType?: str

    reuseKey?: bool


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 lifetime action items0

    Attributes
    ----------
    action : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0], default is Undefined, optional
        A action block as defined below.
    trigger : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0], default is Undefined, optional
        A trigger block as defined below.
    """


    action?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0]

    trigger?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0]


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0ActionItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 lifetime action items0 action items0

    Attributes
    ----------
    actionType : str, default is Undefined, optional
        The Type of action to be performed when the lifetime trigger is triggerec. Possible values include AutoRenew and EmailContacts.
    """


    actionType?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0LifetimeActionItems0TriggerItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 lifetime action items0 trigger items0

    Attributes
    ----------
    daysBeforeExpiry : float, default is Undefined, optional
        The number of days before the Certificate expires that the action associated with this Trigger should run. Conflicts with lifetime_percentage.
    lifetimePercentage : float, default is Undefined, optional
        The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Conflicts with days_before_expiry.
    """


    daysBeforeExpiry?: float

    lifetimePercentage?: float


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0SecretPropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 secret properties items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The Content-Type of the Certificate, such as application/x-pkcs12 for a PFX or application/x-pem-file for a PEM.
    """


    contentType?: str


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0X509CertificatePropertiesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 x509 certificate properties items0

    Attributes
    ----------
    extendedKeyUsage : [str], default is Undefined, optional
        A list of Extended/Enhanced Key Usages.
    keyUsage : [str], default is Undefined, optional
        A list of uses associated with this Key. Possible values include cRLSign, dataEncipherment, decipherOnly, digitalSignature, encipherOnly, keyAgreement, keyCertSign, keyEncipherment and nonRepudiation and are case-sensitive.
    subject : str, default is Undefined, optional
        The Certificate's Subject.
    subjectAlternativeNames : [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0], default is Undefined, optional
        A subject_alternative_names block as defined below.
    validityInMonths : float, default is Undefined, optional
        The Certificates Validity Period in Months.
    """


    extendedKeyUsage?: [str]

    keyUsage?: [str]

    subject?: str

    subjectAlternativeNames?: [KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0]

    validityInMonths?: float


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusAtProviderCertificatePolicyItems0X509CertificatePropertiesItems0SubjectAlternativeNamesItems0:
    r"""
    keyvault azure upbound io v1beta1 certificate status at provider certificate policy items0 x509 certificate properties items0 subject alternative names items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        A list of alternative DNS names (FQDNs) identified by the Certificate.
    emails : [str], default is Undefined, optional
        A list of email addresses identified by this Certificate.
    upns : [str], default is Undefined, optional
        A list of User Principal Names identified by the Certificate.
    """


    dnsNames?: [str]

    emails?: [str]

    upns?: [str]


schema KeyvaultAzureUpboundIoV1beta1CertificateStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


