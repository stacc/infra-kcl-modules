"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Key:
    r"""
    Key is the Schema for the Keys API. Manages a Key Vault Key.

    Attributes
    ----------
    apiVersion : str, default is "keyvault.azure.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Key", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeyvaultAzureUpboundIoV1beta1KeySpec, default is Undefined, required
        spec
    status : KeyvaultAzureUpboundIoV1beta1KeyStatus, default is Undefined, optional
        status
    """


    apiVersion: "keyvault.azure.upbound.io/v1beta1" = "keyvault.azure.upbound.io/v1beta1"

    kind: "Key" = "Key"

    metadata?: v1.ObjectMeta

    spec: KeyvaultAzureUpboundIoV1beta1KeySpec

    status?: KeyvaultAzureUpboundIoV1beta1KeyStatus


schema KeyvaultAzureUpboundIoV1beta1KeySpec:
    r"""
    KeySpec defines the desired state of Key

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KeyvaultAzureUpboundIoV1beta1KeySpecForProvider, default is Undefined, required
        for provider
    initProvider : KeyvaultAzureUpboundIoV1beta1KeySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KeyvaultAzureUpboundIoV1beta1KeySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KeyvaultAzureUpboundIoV1beta1KeySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KeyvaultAzureUpboundIoV1beta1KeySpecForProvider

    initProvider?: KeyvaultAzureUpboundIoV1beta1KeySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KeyvaultAzureUpboundIoV1beta1KeySpecProviderConfigRef

    publishConnectionDetailsTo?: KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KeyvaultAzureUpboundIoV1beta1KeySpecWriteConnectionSecretToRef


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProvider:
    r"""
    keyvault azure upbound io v1beta1 key spec for provider

    Attributes
    ----------
    curve : str, default is Undefined, optional
        Specifies the curve to use when creating an EC key. Possible values are P-256, P-256K, P-384, and P-521. This field will be required in a future release if key_type is EC or EC-HSM. The API will default to P-256 if nothing is specified. Changing this forces a new resource to be created.
    expirationDate : str, default is Undefined, optional
        Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
    keyOpts : [str], default is Undefined, optional
        A list of JSON web key operations. Possible values include: decrypt, encrypt, sign, unwrapKey, verify and wrapKey. Please note these values are case sensitive.
    keySize : float, default is Undefined, optional
        Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. Note: This field is required if key_type is RSA or RSA-HSM. Changing this forces a new resource to be created.
    keyType : str, default is Undefined, optional
        Specifies the Key Type to use for this Key Vault Key. Possible values are EC (Elliptic Curve), EC-HSM, RSA and RSA-HSM. Changing this forces a new resource to be created.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Key should be created. Changing this forces a new resource to be created.
    keyVaultIdRef : KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDRef, default is Undefined, optional
        key vault Id ref
    keyVaultIdSelector : KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDSelector, default is Undefined, optional
        key vault Id selector
    name : str, default is Undefined, optional
        Specifies the name of the Key Vault Key. Changing this forces a new resource to be created.
    notBeforeDate : str, default is Undefined, optional
        Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
    rotationPolicy : [KeyvaultAzureUpboundIoV1beta1KeySpecForProviderRotationPolicyItems0], default is Undefined, optional
        A rotation_policy block as defined below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    curve?: str

    expirationDate?: str

    keyOpts?: [str]

    keySize?: float

    keyType?: str

    keyVaultId?: str

    keyVaultIdRef?: KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDRef

    keyVaultIdSelector?: KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDSelector

    name?: str

    notBeforeDate?: str

    rotationPolicy?: [KeyvaultAzureUpboundIoV1beta1KeySpecForProviderRotationPolicyItems0]

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDRef:
    r"""
    Reference to a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDSelector:
    r"""
    Selector for a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProviderKeyVaultIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProviderRotationPolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 key spec for provider rotation policy items0

    Attributes
    ----------
    automatic : [KeyvaultAzureUpboundIoV1beta1KeySpecForProviderRotationPolicyItems0AutomaticItems0], default is Undefined, optional
        An automatic block as defined below.
    expireAfter : str, default is Undefined, optional
        Expire a Key Vault Key after given duration as an ISO 8601 duration.
    notifyBeforeExpiry : str, default is Undefined, optional
        Notify at a given duration before expiry as an ISO 8601 duration.
    """


    automatic?: [KeyvaultAzureUpboundIoV1beta1KeySpecForProviderRotationPolicyItems0AutomaticItems0]

    expireAfter?: str

    notifyBeforeExpiry?: str


schema KeyvaultAzureUpboundIoV1beta1KeySpecForProviderRotationPolicyItems0AutomaticItems0:
    r"""
    keyvault azure upbound io v1beta1 key spec for provider rotation policy items0 automatic items0

    Attributes
    ----------
    timeAfterCreation : str, default is Undefined, optional
        Rotate automatically at a duration after create as an ISO 8601 duration.
    timeBeforeExpiry : str, default is Undefined, optional
        Rotate automatically at a duration before expiry as an ISO 8601 duration.
    """


    timeAfterCreation?: str

    timeBeforeExpiry?: str


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    curve : str, default is Undefined, optional
        Specifies the curve to use when creating an EC key. Possible values are P-256, P-256K, P-384, and P-521. This field will be required in a future release if key_type is EC or EC-HSM. The API will default to P-256 if nothing is specified. Changing this forces a new resource to be created.
    expirationDate : str, default is Undefined, optional
        Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
    keyOpts : [str], default is Undefined, optional
        A list of JSON web key operations. Possible values include: decrypt, encrypt, sign, unwrapKey, verify and wrapKey. Please note these values are case sensitive.
    keySize : float, default is Undefined, optional
        Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. Note: This field is required if key_type is RSA or RSA-HSM. Changing this forces a new resource to be created.
    keyType : str, default is Undefined, optional
        Specifies the Key Type to use for this Key Vault Key. Possible values are EC (Elliptic Curve), EC-HSM, RSA and RSA-HSM. Changing this forces a new resource to be created.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Key should be created. Changing this forces a new resource to be created.
    keyVaultIdRef : KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDRef, default is Undefined, optional
        key vault Id ref
    keyVaultIdSelector : KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDSelector, default is Undefined, optional
        key vault Id selector
    name : str, default is Undefined, optional
        Specifies the name of the Key Vault Key. Changing this forces a new resource to be created.
    notBeforeDate : str, default is Undefined, optional
        Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
    rotationPolicy : [KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderRotationPolicyItems0], default is Undefined, optional
        A rotation_policy block as defined below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    """


    curve?: str

    expirationDate?: str

    keyOpts?: [str]

    keySize?: float

    keyType?: str

    keyVaultId?: str

    keyVaultIdRef?: KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDRef

    keyVaultIdSelector?: KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDSelector

    name?: str

    notBeforeDate?: str

    rotationPolicy?: [KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderRotationPolicyItems0]

    tags?: {str:str}


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDRef:
    r"""
    Reference to a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDRefPolicy


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDSelector:
    r"""
    Selector for a Vault in keyvault to populate keyVaultId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDSelectorPolicy


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderKeyVaultIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderRotationPolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 key spec init provider rotation policy items0

    Attributes
    ----------
    automatic : [KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderRotationPolicyItems0AutomaticItems0], default is Undefined, optional
        An automatic block as defined below.
    expireAfter : str, default is Undefined, optional
        Expire a Key Vault Key after given duration as an ISO 8601 duration.
    notifyBeforeExpiry : str, default is Undefined, optional
        Notify at a given duration before expiry as an ISO 8601 duration.
    """


    automatic?: [KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderRotationPolicyItems0AutomaticItems0]

    expireAfter?: str

    notifyBeforeExpiry?: str


schema KeyvaultAzureUpboundIoV1beta1KeySpecInitProviderRotationPolicyItems0AutomaticItems0:
    r"""
    keyvault azure upbound io v1beta1 key spec init provider rotation policy items0 automatic items0

    Attributes
    ----------
    timeAfterCreation : str, default is Undefined, optional
        Rotate automatically at a duration after create as an ISO 8601 duration.
    timeBeforeExpiry : str, default is Undefined, optional
        Rotate automatically at a duration before expiry as an ISO 8601 duration.
    """


    timeAfterCreation?: str

    timeBeforeExpiry?: str


schema KeyvaultAzureUpboundIoV1beta1KeySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1KeySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1KeySpecProviderConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1KeySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRef

    metadata?: KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToMetadata

    name: str


schema KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRefPolicy


schema KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyvaultAzureUpboundIoV1beta1KeySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KeyvaultAzureUpboundIoV1beta1KeySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KeyvaultAzureUpboundIoV1beta1KeyStatus:
    r"""
    KeyStatus defines the observed state of Key.

    Attributes
    ----------
    atProvider : KeyvaultAzureUpboundIoV1beta1KeyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KeyvaultAzureUpboundIoV1beta1KeyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KeyvaultAzureUpboundIoV1beta1KeyStatusAtProvider

    conditions?: [KeyvaultAzureUpboundIoV1beta1KeyStatusConditionsItems0]

    observedGeneration?: int


schema KeyvaultAzureUpboundIoV1beta1KeyStatusAtProvider:
    r"""
    keyvault azure upbound io v1beta1 key status at provider

    Attributes
    ----------
    curve : str, default is Undefined, optional
        Specifies the curve to use when creating an EC key. Possible values are P-256, P-256K, P-384, and P-521. This field will be required in a future release if key_type is EC or EC-HSM. The API will default to P-256 if nothing is specified. Changing this forces a new resource to be created.
    e : str, default is Undefined, optional
        The RSA public exponent of this Key Vault Key.
    expirationDate : str, default is Undefined, optional
        Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
    id : str, default is Undefined, optional
        The Key Vault Key ID.
    keyOpts : [str], default is Undefined, optional
        A list of JSON web key operations. Possible values include: decrypt, encrypt, sign, unwrapKey, verify and wrapKey. Please note these values are case sensitive.
    keySize : float, default is Undefined, optional
        Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. Note: This field is required if key_type is RSA or RSA-HSM. Changing this forces a new resource to be created.
    keyType : str, default is Undefined, optional
        Specifies the Key Type to use for this Key Vault Key. Possible values are EC (Elliptic Curve), EC-HSM, RSA and RSA-HSM. Changing this forces a new resource to be created.
    keyVaultId : str, default is Undefined, optional
        The ID of the Key Vault where the Key should be created. Changing this forces a new resource to be created.
    n : str, default is Undefined, optional
        The RSA modulus of this Key Vault Key.
    name : str, default is Undefined, optional
        Specifies the name of the Key Vault Key. Changing this forces a new resource to be created.
    notBeforeDate : str, default is Undefined, optional
        Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
    publicKeyOpenssh : str, default is Undefined, optional
        The OpenSSH encoded public key of this Key Vault Key.
    publicKeyPem : str, default is Undefined, optional
        The PEM encoded public key of this Key Vault Key.
    resourceId : str, default is Undefined, optional
        The (Versioned) ID for this Key Vault Key. This property points to a specific version of a Key Vault Key, as such using this won't auto-rotate values if used in other Azure Services.
    resourceVersionlessId : str, default is Undefined, optional
        The Versionless ID of the Key Vault Key. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Key is updated.
    rotationPolicy : [KeyvaultAzureUpboundIoV1beta1KeyStatusAtProviderRotationPolicyItems0], default is Undefined, optional
        A rotation_policy block as defined below.
    tags : {str:str}, default is Undefined, optional
        A mapping of tags to assign to the resource.
    version : str, default is Undefined, optional
        The current version of the Key Vault Key.
    versionlessId : str, default is Undefined, optional
        The Base ID of the Key Vault Key.
    x : str, default is Undefined, optional
        The EC X component of this Key Vault Key.
    y : str, default is Undefined, optional
        The EC Y component of this Key Vault Key.
    """


    curve?: str

    e?: str

    expirationDate?: str

    id?: str

    keyOpts?: [str]

    keySize?: float

    keyType?: str

    keyVaultId?: str

    n?: str

    name?: str

    notBeforeDate?: str

    publicKeyOpenssh?: str

    publicKeyPem?: str

    resourceId?: str

    resourceVersionlessId?: str

    rotationPolicy?: [KeyvaultAzureUpboundIoV1beta1KeyStatusAtProviderRotationPolicyItems0]

    tags?: {str:str}

    version?: str

    versionlessId?: str

    x?: str

    y?: str


schema KeyvaultAzureUpboundIoV1beta1KeyStatusAtProviderRotationPolicyItems0:
    r"""
    keyvault azure upbound io v1beta1 key status at provider rotation policy items0

    Attributes
    ----------
    automatic : [KeyvaultAzureUpboundIoV1beta1KeyStatusAtProviderRotationPolicyItems0AutomaticItems0], default is Undefined, optional
        An automatic block as defined below.
    expireAfter : str, default is Undefined, optional
        Expire a Key Vault Key after given duration as an ISO 8601 duration.
    notifyBeforeExpiry : str, default is Undefined, optional
        Notify at a given duration before expiry as an ISO 8601 duration.
    """


    automatic?: [KeyvaultAzureUpboundIoV1beta1KeyStatusAtProviderRotationPolicyItems0AutomaticItems0]

    expireAfter?: str

    notifyBeforeExpiry?: str


schema KeyvaultAzureUpboundIoV1beta1KeyStatusAtProviderRotationPolicyItems0AutomaticItems0:
    r"""
    keyvault azure upbound io v1beta1 key status at provider rotation policy items0 automatic items0

    Attributes
    ----------
    timeAfterCreation : str, default is Undefined, optional
        Rotate automatically at a duration after create as an ISO 8601 duration.
    timeBeforeExpiry : str, default is Undefined, optional
        Rotate automatically at a duration before expiry as an ISO 8601 duration.
    """


    timeAfterCreation?: str

    timeBeforeExpiry?: str


schema KeyvaultAzureUpboundIoV1beta1KeyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


