"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Schema:
    r"""
    A Schema represents the declarative state of a PostgreSQL schema.

    Attributes
    ----------
    apiVersion : str, default is "postgresql.sql.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Schema", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpec, default is Undefined, required
        spec
    status : PostgresqlSQLCrossplaneIoV1alpha1SchemaStatus, default is Undefined, optional
        status
    """


    apiVersion: "postgresql.sql.crossplane.io/v1alpha1" = "postgresql.sql.crossplane.io/v1alpha1"

    kind: "Schema" = "Schema"

    metadata?: v1.ObjectMeta

    spec: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpec

    status?: PostgresqlSQLCrossplaneIoV1alpha1SchemaStatus


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpec:
    r"""
    A SchemaSpec defines the desired state of a Schema.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProvider, default is Undefined, required
        for provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecProviderConfigRef

    publishConnectionDetailsTo?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecWriteConnectionSecretToRef


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProvider:
    r"""
    SchemaParameters define the desired state of a PostgreSQL schema.

    Attributes
    ----------
    database : str, default is Undefined, optional
        Database this schema is for.
    databaseRef : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseRef, default is Undefined, optional
        database ref
    databaseSelector : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseSelector, default is Undefined, optional
        database selector
    revokePublicOnSchema : bool, default is Undefined, optional
        RevokePublicOnSchema apply a "REVOKE ALL ON SCHEMA public FROM public" statement
    role : str, default is Undefined, optional
        Role for ownership of this schema.
    roleRef : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleRef, default is Undefined, optional
        role ref
    roleSelector : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleSelector, default is Undefined, optional
        role selector
    """


    database?: str

    databaseRef?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseRef

    databaseSelector?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseSelector

    revokePublicOnSchema?: bool

    role?: str

    roleRef?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleRef

    roleSelector?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleSelector


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseRef:
    r"""
    DatabaseRef references the database object this schema is for.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseRefPolicy


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseSelector:
    r"""
    DatabaseSelector selects a reference to a Database this schema is for.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseSelectorPolicy


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderDatabaseSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleRef:
    r"""
    RoleRef references the role object this schema is for.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleRefPolicy


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleSelector:
    r"""
    RoleSelector selects a reference to a Role this schema is for.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleSelectorPolicy


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecForProviderRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecProviderConfigRefPolicy


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToConfigRef

    metadata?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToMetadata

    name: str


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToConfigRefPolicy


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaStatus:
    r"""
    A SchemaStatus represents the observed state of a Schema.

    Attributes
    ----------
    conditions : [PostgresqlSQLCrossplaneIoV1alpha1SchemaStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    conditions?: [PostgresqlSQLCrossplaneIoV1alpha1SchemaStatusConditionsItems0]

    observedGeneration?: int


schema PostgresqlSQLCrossplaneIoV1alpha1SchemaStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


