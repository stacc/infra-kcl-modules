"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProviderConfig:
    r"""
    A ProviderConfig configures a Template provider.

    Attributes
    ----------
    apiVersion : str, default is "mysql.sql.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProviderConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpec, default is Undefined, required
        spec
    status : MysqlSQLCrossplaneIoV1alpha1ProviderConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "mysql.sql.crossplane.io/v1alpha1" = "mysql.sql.crossplane.io/v1alpha1"

    kind: "ProviderConfig" = "ProviderConfig"

    metadata?: v1.ObjectMeta

    spec: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpec

    status?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigStatus


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpec:
    r"""
    A ProviderConfigSpec defines the desired state of a ProviderConfig.

    Attributes
    ----------
    credentials : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecCredentials, default is Undefined, required
        credentials
    tls : str, default is Undefined, optional
        tls=true enables TLS / SSL encrypted connection to the server.
        Use skip-verify if you want to use a self-signed or invalid certificate (server side)
        or use preferred to use TLS only when advertised by the server. This is similar
        to skip-verify, but additionally allows a fallback to a connection which is
        not encrypted. Neither skip-verify nor preferred add any reliable security.
        Alternatively, set tls=custom and provide a custom TLS configuration via the tlsConfig field.
    tlsConfig : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfig, default is Undefined, optional
        tls config
    """


    credentials: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecCredentials

    tls?: "true" | "skip-verify" | "preferred" | "custom"

    tlsConfig?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfig


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecCredentials:
    r"""
    Credentials required to authenticate to this provider.

    Attributes
    ----------
    connectionSecretRef : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecCredentialsConnectionSecretRef, default is Undefined, optional
        connection secret ref
    source : str, default is Undefined, required
        Source of the provider credentials.
    """


    connectionSecretRef?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecCredentialsConnectionSecretRef

    source: "MySQLConnectionSecret"


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecCredentialsConnectionSecretRef:
    r"""
    A CredentialsSecretRef is a reference to a MySQL connection secret
    that contains the credentials that must be used to connect to the
    provider. +optional

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfig:
    r"""
    Optional TLS configuration for sql driver. Setting this field also requires the tls field to be set to custom.

    Attributes
    ----------
    caCert : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigCaCert, default is Undefined, optional
        ca cert
    clientCert : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientCert, default is Undefined, optional
        client cert
    clientKey : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientKey, default is Undefined, optional
        client key
    insecureSkipVerify : bool, default is Undefined, optional
        insecure skip verify
    """


    caCert?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigCaCert

    clientCert?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientCert

    clientKey?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientKey

    insecureSkipVerify?: bool


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigCaCert:
    r"""
    TLSSecret defines a reference to a K8s secret and its specific internal key that contains the TLS cert/keys in PEM format.

    Attributes
    ----------
    secretRef : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigCaCertSecretRef, default is Undefined, optional
        secret ref
    """


    secretRef?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigCaCertSecretRef


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigCaCertSecretRef:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientCert:
    r"""
    TLSSecret defines a reference to a K8s secret and its specific internal key that contains the TLS cert/keys in PEM format.

    Attributes
    ----------
    secretRef : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientCertSecretRef, default is Undefined, optional
        secret ref
    """


    secretRef?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientCertSecretRef


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientCertSecretRef:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientKey:
    r"""
    TLSSecret defines a reference to a K8s secret and its specific internal key that contains the TLS cert/keys in PEM format.

    Attributes
    ----------
    secretRef : MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientKeySecretRef, default is Undefined, optional
        secret ref
    """


    secretRef?: MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientKeySecretRef


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigSpecTLSConfigClientKeySecretRef:
    r"""
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigStatus:
    r"""
    A ProviderConfigStatus reflects the observed state of a ProviderConfig.

    Attributes
    ----------
    conditions : [MysqlSQLCrossplaneIoV1alpha1ProviderConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    users : int, default is Undefined, optional
        Users of this provider configuration.
    """


    conditions?: [MysqlSQLCrossplaneIoV1alpha1ProviderConfigStatusConditionsItems0]

    users?: int


schema MysqlSQLCrossplaneIoV1alpha1ProviderConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


